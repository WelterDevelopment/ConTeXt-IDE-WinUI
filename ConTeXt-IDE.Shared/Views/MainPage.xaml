<Page
	x:Class="ConTeXt_IDE.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:codeeditor="using:CodeEditorControl_WinUI"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
    xmlns:models="using:ConTeXt_IDE.Models"
    xmlns:pdfjs="using:PDFjs.WinUI"
    mc:Ignorable="d" 
	DataContext="{x:Bind VM}" PointerPressed="PagePointerPressed"
	Loaded="Page_Loaded" 
	RequestedTheme="{Binding Default.Theme, Converter={StaticResource StringToTheme}, Mode=OneWay}" x:DefaultBindMode="OneWay"  Background="Transparent">
	<Page.Resources>
		<x:Double x:Key="SettingsCardWrapThreshold">300</x:Double>
		<x:Double x:Key="SettingsCardWrapNoIconThreshold">50</x:Double>
		<DataTemplate x:Key="FolderTemplate" x:DataType="models:FileItem">
			<models:MyTreeViewItem IsExpanded="{Binding IsExpanded, Mode=TwoWay}" CanDrag="False" ToolTipService.ToolTip="{Binding FileName}" HorizontalContentAlignment="Left" ItemsSource="{x:Bind Children}">
				<models:MyTreeViewItem.ContentTransitions>
					<TransitionCollection></TransitionCollection>
				</models:MyTreeViewItem.ContentTransitions>
				<models:MyTreeViewItem.Transitions>
					<TransitionCollection></TransitionCollection>
				</models:MyTreeViewItem.Transitions>
				<models:MyTreeViewItem.ContextFlyout>
					<MenuFlyout Placement="Bottom">
						<MenuFlyoutItem x:Name="NewFile" Icon="Add" Click="NewFile_Click" Text="New File"></MenuFlyoutItem>
						<MenuFlyoutItem x:Name="NewFolder" Icon="Add" Click="NewFolder_Click"  Text="New Folder"></MenuFlyoutItem>
						<MenuFlyoutSeparator/>
						<MenuFlyoutItem x:Name="Rename" Icon="Rename" Click="Rename_Click" Text="Rename"></MenuFlyoutItem>
						<MenuFlyoutItem x:Name="Delete" Icon="Delete" Click="Delete_Click" Text="Delete"></MenuFlyoutItem>
					</MenuFlyout>
				</models:MyTreeViewItem.ContextFlyout>
				<StackPanel Style="{StaticResource HorizontalStack}" Margin="0">
					<SymbolIcon Width="20" Symbol="Folder"/>
					<TextBlock Text="{Binding FileName, Mode=OneWay}"/>
				</StackPanel>
			</models:MyTreeViewItem>
		</DataTemplate>

		<DataTemplate  x:Key="FileTemplate" x:DataType="models:FileItem">
			<models:MyTreeViewItem HorizontalContentAlignment="Left" Tapped="FileItemTapped" Margin="0,0,0,0" ToolTipService.ToolTip="{Binding FileName}" >
				<models:MyTreeViewItem.ContextFlyout>
					<MenuFlyout Placement="Bottom">
						<MenuFlyoutItem Visibility="{Binding  Converter={StaticResource FileTypeToVisibility}, ConverterParameter=context, Mode=OneWay}" IsEnabled="{Binding Source={StaticResource VM}, Path=Default.DistributionInstalled}" x:Name="CompileFlyoutButton" Icon="Play" Click="Compile_Click" Text="Compile"></MenuFlyoutItem>
						<MenuFlyoutItem x:Name="SetRoot" Icon="Favorite" Click="SetRoot_Click" Visibility="{Binding Converter={StaticResource SetRootVisibility}}" IsEnabled="{Binding IsRoot, Converter={StaticResource BoolInverter}}" Text="Set as Main File"></MenuFlyoutItem>
						<MenuFlyoutSeparator/>
						<MenuFlyoutItem x:Name="Rename" Icon="Rename" Click="Rename_Click" Text="Rename"></MenuFlyoutItem>
						<MenuFlyoutItem x:Name="Delete" Icon="Delete" Click="Delete_Click" IsEnabled="{Binding IsRoot, Converter={StaticResource BoolInverter}}" Text="Delete"></MenuFlyoutItem>
					</MenuFlyout>
				</models:MyTreeViewItem.ContextFlyout>
				<StackPanel  Style="{StaticResource HorizontalStack}" Margin="-12,0,0,0" >
					<Grid Width="6" VerticalAlignment="Stretch">
						<FontIcon Width="6" Height="6" VerticalAlignment="Center" FontSize="6" Glyph="&#xF127;" Visibility="{Binding IsOpened}"></FontIcon>
					</Grid>
					<SymbolIcon Width="20" Symbol="Document"></SymbolIcon>
					<TextBlock Text="{Binding FileName, Mode=OneWay}" FontWeight="{Binding IsRoot, Converter={StaticResource BoolToFontWeight}}" />
				</StackPanel>
			</models:MyTreeViewItem>
		</DataTemplate>

		<DataTemplate x:Key="ProjectFolderTemplate" x:DataType="models:FileItem">
			<models:MyTreeViewItem CanDrag="False"  HorizontalAlignment="Stretch" ToolTipService.ToolTip="{Binding File.Path}" IsExpanded="{Binding IsExpanded, Mode=TwoWay}" ItemsSource="{x:Bind Children}">
				<models:MyTreeViewItem.ContentTransitions>
					<TransitionCollection></TransitionCollection>
				</models:MyTreeViewItem.ContentTransitions>
				<models:MyTreeViewItem.Transitions>
					<TransitionCollection></TransitionCollection>
				</models:MyTreeViewItem.Transitions>
				<models:MyTreeViewItem.ContextFlyout>
					<MenuFlyout Placement="Bottom">
						<MenuFlyoutItem x:Name="NewFile" Icon="Add" Click="NewFile_Click" Text="New File"></MenuFlyoutItem>
						<MenuFlyoutItem x:Name="NewFolder" Icon="Add" Click="NewFolder_Click"  Text="New Folder"></MenuFlyoutItem>
						<MenuFlyoutSeparator/>
						<MenuFlyoutItem x:Name="Unload" Icon="Undo" Click="Unload_Click" Text="Unload"></MenuFlyoutItem>
						<MenuFlyoutItem x:Name="ViewInExplorer" Icon="OpenFile" Click="OpeninExplorer_Click" Text="Open in Explorer"></MenuFlyoutItem>
					</MenuFlyout>
				</models:MyTreeViewItem.ContextFlyout>
				<Grid HorizontalAlignment="Stretch" ColumnSpacing="6" Margin="0,0,16,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<FontIcon Grid.Column="0" Glyph="&#xE838;"></FontIcon>
					<TextBlock Grid.Column="1" HorizontalAlignment="Left" MaxLines="2" TextWrapping="Wrap" FontWeight="Bold" Text="{Binding FileName, Mode=OneWay}"/>
					<Button ToolTipService.ToolTip="Create file" VerticalAlignment="Center" IsEnabled="{Binding Source={StaticResource VM}, Path=IsProjectLoaded}"  Grid.Column="2"  Click="AddFileRoot_Click">
						<SymbolIcon Symbol="Document"/>
					</Button>
					<Button  ToolTipService.ToolTip="Create folder" VerticalAlignment="Center" IsEnabled="{Binding Source={StaticResource VM}, Path=IsProjectLoaded}"  Grid.Column="3" Click="AddFolderRoot_Click">
						<SymbolIcon Symbol="Folder"/>
					</Button>
				</Grid>
			</models:MyTreeViewItem>
		</DataTemplate>

		<models:ExplorerItemTemplateSelector
			x:Key="ExplorerItemTemplateSelector"
			FolderTemplate="{StaticResource FolderTemplate}"
			FileTemplate="{StaticResource FileTemplate}"
			ProjectFolderTemplate="{StaticResource ProjectFolderTemplate}"
			/>

		<DataTemplate x:Key="KeywordsTemplate" x:DataType="models:Keywords">
			<StackPanel  Style="{StaticResource HorizontalStack}" >
				<TextBlock Text="{Binding Number}"></TextBlock>
				<ListView ItemsSource="{Binding Constant}" SelectionMode="None" IsItemClickEnabled="False"  IsHitTestVisible="False">
					<ListView.ItemContainerTransitions>
						<TransitionCollection></TransitionCollection>
					</ListView.ItemContainerTransitions>
					<ListView.ItemContainerStyle>
						<Style TargetType="ListViewItem">
							<Setter Property="Padding" Value="0"/>
							<Setter Property="Margin" Value="4,0,0,0"/>
							<Setter Property="MinWidth" Value="10"/>
							<Setter Property="MinHeight" Value="10"/>
							<Setter Property="BorderThickness" Value="0"/>
						</Style>
					</ListView.ItemContainerStyle>
					<ListView.ItemsPanel>
						<ItemsPanelTemplate>
							<toolkit:WrapPanel Orientation="Horizontal" MaxWidth="370" Padding="0"></toolkit:WrapPanel>
						</ItemsPanelTemplate>
					</ListView.ItemsPanel>
					<ListView.ItemTemplate>
						<DataTemplate>
							<TextBlock TextDecorations="{Binding Default, Converter={StaticResource ParameterDefaultToDecoration}}" Text="{Binding Type, Converter={StaticResource ParameterTypeToText}}"></TextBlock>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
			</StackPanel>
		</DataTemplate>

		<DataTemplate x:Key="AssignmentsTemplate" x:DataType="models:Assignments">
			<StackPanel  Style="{StaticResource HorizontalStack}" >
				<TextBlock Text="{Binding Number}"></TextBlock>
				<ListView ItemsSource="{Binding Parameter}" SelectionMode="None" IsItemClickEnabled="False" IsHitTestVisible="False">
					<ListView.ItemContainerTransitions>
						<TransitionCollection></TransitionCollection>
					</ListView.ItemContainerTransitions>
					<ListView.ItemContainerStyle>
						<Style TargetType="ListViewItem">
							<Setter Property="Padding" Value="2,0,0,2"/>
							<Setter Property="Margin" Value="4,0,0,0"/>
							<Setter Property="MinWidth" Value="10"/>
							<Setter Property="MinHeight" Value="10"/>
							<Setter Property="BorderThickness" Value="0"/>
						</Style>
					</ListView.ItemContainerStyle>
					<ListView.ItemTemplate>
						<DataTemplate>
							<StackPanel  Style="{StaticResource HorizontalStack}">
								<TextBlock MinWidth="120"><Run Text="{Binding Name, Converter={StaticResource ParameterTypeToText}}"/></TextBlock>
								<TextBlock Visibility="{Binding Constant, Converter={StaticResource StringToVisibility}}"><Run Text=" = "/></TextBlock>
								<ListView ItemsSource="{Binding Constant}" SelectionMode="None" IsItemClickEnabled="False">
									<ListView.ItemContainerTransitions>
										<TransitionCollection></TransitionCollection>
									</ListView.ItemContainerTransitions>
									<ListView.ItemContainerStyle>
										<Style TargetType="ListViewItem">
											<Setter Property="Padding" Value="0"/>
											<Setter Property="Margin" Value="4,0,0,0"/>
											<Setter Property="MinWidth" Value="10"/>
											<Setter Property="MinHeight" Value="10"/>
											<Setter Property="BorderThickness" Value="0"/>
										</Style>
									</ListView.ItemContainerStyle>
									<ListView.ItemsPanel>
										<ItemsPanelTemplate>
											<toolkit:WrapPanel Orientation="Horizontal" MaxWidth="240" Padding="0"></toolkit:WrapPanel>
										</ItemsPanelTemplate>
									</ListView.ItemsPanel>
									<ListView.ItemTemplate>
										<DataTemplate>
											<TextBlock TextDecorations="{Binding Default, Converter={StaticResource ParameterDefaultToDecoration}}" Text="{Binding Type, Converter={StaticResource ParameterTypeToText}}"></TextBlock>
										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</StackPanel>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
				<!--<TextBlock Text="{Binding Inherit.Name}" Margin="4,0,0,0"></TextBlock>-->
			</StackPanel>
		</DataTemplate>

		<models:CommandItemTemplateSelector
			x:Key="CommandItemTemplateSelector"
			KeywordsTemplate="{StaticResource KeywordsTemplate}"
			AssignmentsTemplate="{StaticResource AssignmentsTemplate}"
			/>

		<CollectionViewSource x:Key="cvs" x:Name="cvs" IsSourceGrouped="True"  />
	</Page.Resources>

	<Grid x:Name="RootGrid" RowSpacing="0" Background="{Binding AccentBrushLow,Source={StaticResource AccentColorSetting}}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
		</Grid.RowDefinitions>

		<Grid.BackgroundTransition>
			<BrushTransition />
		</Grid.BackgroundTransition>
		<TabView Grid.Row="0" IsAddTabButtonVisible="False" CanDrag="False" CanDragTabs="False" CanReorderTabs="False"  TabWidthMode="SizeToContent" x:Name="MainRibbon" Background="Transparent">
			<!--<TabView.Resources>
				<StaticResource x:Key="TabViewItemHeaderBackgroundSelected"   ResourceKey="TabBackground" />
			</TabView.Resources>-->
			<!--<TabView.Background>
				<SolidColorBrush Color="{Binding AccentColorLow, Source={StaticResource AccentColorSetting}}"></SolidColorBrush>
			</TabView.Background>-->
			<TabView.TabStripHeader>
				<StackPanel Style="{StaticResource HorizontalStack}" Background="Transparent" VerticalAlignment="Stretch" Height="28" Margin="4,0,4,-4" Spacing="0" x:Name="TabStripHeader" >

					<Button VerticalAlignment="Stretch" Padding="2"  Margin="{Binding Margin_SettingsButton}" MinWidth="28"  Background="Transparent">
						<Button.Content>
							<!--<BitmapIcon Foreground="{ThemeResource ForegroundColor}" UriSource="ms-appx:///Assets/SquareLogo.png" ></BitmapIcon>-->
							<!--<Image  Source="ms-appx:///Assets/SquareLogo.png"/>-->
							<FontIcon FontSize="14" Glyph="&#xE713;"></FontIcon>
						</Button.Content>
						<Button.Flyout >
							<MenuFlyout Placement="Bottom">
								<MenuFlyoutItem ToolTipService.ToolTip="About this app" Text="About" Click="TitleButton_Click">
									<MenuFlyoutItem.Icon>
										<SymbolIcon Symbol="Help" ></SymbolIcon>
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutItem  Text="Restore Settings" Click="Restore_Click" ToolTipService.ToolTip="Reset the App">
									<MenuFlyoutItem.Icon>
										<SymbolIcon Symbol="Refresh" ></SymbolIcon>
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutItem  Text="Rate this app" Click="Rate_Click" ToolTipService.ToolTip="Feel free to also use your review to communicate feature requests and bug reports!">
									<MenuFlyoutItem.Icon>
										<FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE734;" ></FontIcon>
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutItem  Text="View in GitHub" Click="Github_Click" ToolTipService.ToolTip="View the source code, pull request changes and write feature requests and bug reports.">
									<MenuFlyoutItem.Icon>
										<BitmapIcon Foreground="{ThemeResource ForegroundColor}" UriSource="ms-appx:///Assets/GitHub.png" ></BitmapIcon>
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
							</MenuFlyout>

						</Button.Flyout>
					</Button>


					<DropDownButton Name="Btn_Projects" Padding="4" Margin="4,0,0,0" Content="Projects" Background="Transparent" VerticalAlignment="Stretch" ToolTipService.ToolTip="Project list" >
						<DropDownButton.Flyout>
							<Flyout Placement="Bottom">
								<StackPanel Orientation="Vertical" Spacing="6">
									<Button x:Name="Btnaddproject" Click="Btnaddproject_Click" ToolTipService.ToolTip="Add a project folder" >
										<Button.Content>
											<StackPanel  Style="{StaticResource HorizontalStack}">
												<SymbolIcon Symbol="Add"></SymbolIcon>
												<TextBlock  Text="Add Project" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
											</StackPanel>
										</Button.Content>
									</Button>
									<ListView MaxWidth="300" ItemsSource="{Binding Default.ProjectList}" SelectedItem="{Binding CurrentProject, Mode=TwoWay}">
										<ListView.ItemTemplate>
											<DataTemplate>
												<Grid >
													<Grid.ContextFlyout>
														<MenuFlyout>
															<MenuFlyoutItem  x:Name="Btndeleteproject" Icon="Delete" Click="Btndeleteproject_Click" Text="Remove project" ToolTipService.ToolTip="Remove project from this app" ></MenuFlyoutItem>
														</MenuFlyout>
													</Grid.ContextFlyout>
													<TextBlock Grid.Column="0" ToolTipService.ToolTip="{Binding Folder.Path}" Text="{Binding Name}" TextWrapping="NoWrap"   VerticalAlignment="Center" ></TextBlock>
												</Grid>
											</DataTemplate>
										</ListView.ItemTemplate>
									</ListView>
								</StackPanel>
							</Flyout>
						</DropDownButton.Flyout>
					</DropDownButton>

					<StackPanel Style="{StaticResource HorizontalStackNarrow}" Visibility="{Binding IsProjectLoaded}">
						<FontIcon VerticalAlignment="Center" Glyph="&#xe76c;" FontSize="10" Visibility="{Binding Default.ShowProjectPane, Converter={StaticResource BoolToInvisibility}}">
							<animations:Implicit.ShowAnimations>
								<animations:TranslationAnimation Duration="0:0:0.25" From="-20, 0, 0" To="0" ></animations:TranslationAnimation>
								<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
							</animations:Implicit.ShowAnimations>
							<animations:Implicit.HideAnimations>
								<animations:TranslationAnimation Duration="0:0:0.25" From="0" To="-20, 0, 0" ></animations:TranslationAnimation>
								<animations:OpacityAnimation Duration="0:0:0.25" From="1.0" To="0"></animations:OpacityAnimation>
							</animations:Implicit.HideAnimations>
						</FontIcon>
						<DropDownButton x:Name="Btn_Project"  Padding="4" Background="Transparent" VerticalAlignment="Stretch" ToolTipService.ToolTip="Show project items"  Visibility="{Binding Default.ShowProjectPane, Converter={StaticResource BoolToInvisibility}}" >
							<animations:Implicit.ShowAnimations>
								<animations:TranslationAnimation Duration="0:0:0.25" From="-50, 0, 0" To="0" ></animations:TranslationAnimation>
								<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
							</animations:Implicit.ShowAnimations>
							<animations:Implicit.HideAnimations>
								<animations:TranslationAnimation Duration="0:0:0.25" From="0" To="-50, 0, 0" ></animations:TranslationAnimation>
								<animations:OpacityAnimation Duration="0:0:0.25" From="1.0" To="0"></animations:OpacityAnimation>
							</animations:Implicit.HideAnimations>
							<DropDownButton.Flyout>
								<Flyout Placement="Bottom">
									<TreeView Margin="-12,0,0,0" MaxWidth="300" Padding="-6,0,0,0" Grid.Row="0" SelectionMode="None"   ScrollViewer.VerticalScrollBarVisibility="Auto"  ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}" ItemsSource="{Binding CurrentProject.Directory, Mode=OneWay}" 
					  CanReorderItems="False" AllowDrop="False" DragItemsStarting="TreeView_DragItemsStarting"  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" >
										<TreeView.ItemContainerTransitions>
											<TransitionCollection />
										</TreeView.ItemContainerTransitions>
										<TreeView.Transitions>
											<TransitionCollection></TransitionCollection>
										</TreeView.Transitions>
									</TreeView>
								</Flyout>
							</DropDownButton.Flyout>
							<DropDownButton.Content>
								<TextBlock Text="{Binding CurrentProject.Name}" TextWrapping="NoWrap" MaxWidth="150"></TextBlock>
							</DropDownButton.Content>
						</DropDownButton>
					</StackPanel>
				</StackPanel>
			</TabView.TabStripHeader>

			<TabView.TabStripFooter>
				<Grid x:Name="TabStripFooter" IsHitTestVisible="False" Loaded="TabStripFooter_Loaded" >
					<!--<StackPanel Style="{StaticResource HorizontalStack}" HorizontalAlignment="Right" VerticalAlignment="Center" Spacing="6" Margin="0,0,12,0">
                        <Button Click="Btn_Minimize_Click" Height="24" Width="24" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            <Button.Content>
                                <SymbolIcon HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Symbol="FontDecrease"></SymbolIcon>
                            </Button.Content>
                        </Button>
                        <Button Click="Btn_Exit_Click" Height="24" Width="24" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            <Button.Content>
                                <SymbolIcon HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Symbol="Cancel"></SymbolIcon>
                            </Button.Content>
                        </Button>
                    </StackPanel>-->
				</Grid>
			</TabView.TabStripFooter>


			<TabView.TabItems>
				<TabViewItem Tag="Start" IsClosable="False" ToolTipService.ToolTip="Start: Save, compile, set parameters">
					<!--<TabViewItem.ContentTemplate>
						<DataTemplate>
							<Grid Margin="20" Background="Red">	</Grid>
						</DataTemplate>
					</TabViewItem.ContentTemplate>-->
					<TabViewItem.Header>
						<StackPanel  Tag="Start" PointerPressed="Tbv_PointerPressed" Style="{StaticResource HorizontalStack}">
							<FontIcon  Glyph="&#xE768;"></FontIcon>
							<TextBlock  Text="Start" ></TextBlock>
						</StackPanel>
					</TabViewItem.Header>
					<Grid>
						<ScrollViewer Style="{StaticResource RibbonView}" CornerRadius="{Binding CornerRadius_Ribbon}" Margin="{Binding Margin_Ribbon}"   >
							<StackPanel Style="{StaticResource RibbonContent}">
							
								<SplitButton Visibility="{Binding IsFileItemLoaded}" x:Name="Undo" Click="Undo_Click" ToolTipService.ToolTip="Undo" IsEnabled="{Binding Codewriter.CanUndo}" >
									<SplitButton.Content>
										<SymbolIcon Symbol="Undo"></SymbolIcon>
									</SplitButton.Content>
									<SplitButton.Flyout>
										<Flyout x:Name="UndoFlyout" Placement="Bottom">
											<ListView x:Name="UndoCommands" MinWidth="150" MaxWidth="300" SelectionMode="Extended" IsItemClickEnabled="True" ItemClick="UndoCommands_ItemClick" PointerExited="UndoCommands_PointerExited" ItemsSource="{Binding Codewriter.InvertedEditActionHistory}" >
												<ListView.ItemContainerStyle>
													<Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
														<Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
														<Setter Property="MinHeight" Value="32"></Setter>
														<!--<Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <ListViewItemPresenter></ListViewItemPresenter>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>-->
													</Style>
												</ListView.ItemContainerStyle>
												<ListView.ItemTemplate>
													<DataTemplate>
														<Grid VerticalAlignment="Stretch" PointerEntered="Grid_PointerEntered" >
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>
															<TextBlock VerticalAlignment="Center" Grid.Column="0" Margin="0,0,6,0" FontSize="10" Foreground="{ThemeResource ForegroundLightColor}" >
                                                                    <Run Text="{Binding EditActionType}" />
                                                                    <Run Text=":" />
															</TextBlock>
															<TextBlock VerticalAlignment="Center" Grid.Column="1" Text="{Binding TextInvolved}" TextWrapping="NoWrap" MaxLines="1" MinWidth="60" MaxWidth="250" />
														</Grid>
													</DataTemplate>
												</ListView.ItemTemplate>
											</ListView>
										</Flyout>
									</SplitButton.Flyout>
								</SplitButton>

								<Border Style="{StaticResource Separator}" Visibility="{Binding IsFileItemLoaded}" ></Border>

								<StackPanel Style="{StaticResource HorizontalStackNarrow}" Visibility="{Binding IsFileItemLoaded}">
									<Button Name="Btn_Save" CornerRadius="{StaticResource CornerRadiusLeft}"  IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" Click="Btn_Save_Click" ToolTipService.ToolTip="Save current file" >
										<Button.Content>
											<StackPanel Style="{StaticResource HorizontalStack}" >
												<SymbolIcon Symbol="Save"></SymbolIcon>
												<TextBlock Text="Save" VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}" ></TextBlock>
											</StackPanel>
										</Button.Content>
									</Button>
									<Button CornerRadius="{StaticResource CornerRadiusRight}" IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}"  Click="Btn_SaveAll_Click" ToolTipService.ToolTip="Save all opened files">
										<Button.Content>
											<StackPanel Style="{StaticResource HorizontalStack}" >
												<FontIcon Glyph="&#xEA35;"></FontIcon>
												<TextBlock Text="Save all" VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}" ></TextBlock>
											</StackPanel>
										</Button.Content>
									</Button>
								</StackPanel>

								<StackPanel Style="{StaticResource HorizontalStackNarrow}">
									<Button x:Name="Btn_CompileRoot"  CornerRadius="{x:Bind Btn_Compile.Visibility, Mode=OneWay, Converter={StaticResource VisibilityToCornerRadius}, ConverterParameter=right}" Visibility="{Binding CurrentRootItem, Converter={StaticResource StringToVisibility}}" ToolTipService.ToolTip="Save all &amp; Compile root file" IsEnabled="{Binding IsSaving, Mode=OneWay, Converter={StaticResource BoolInverter}}"  Click="Btn_CompileRoot_Click" >
										<Button.Content>
											<StackPanel Style="{StaticResource HorizontalStack}">
												<FontIcon Glyph="&#xF5B0;"></FontIcon>
												<TextBlock Text="Root" VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
											</StackPanel>
										</Button.Content>
									</Button>
									<!--BorderThickness="{x:Bind Current.Visibility, Mode=OneWay, Converter={StaticResource VisibilityToBorderThickness}, ConverterParameter=left}"-->
									<Button x:Name="Btn_Compile" CornerRadius="{x:Bind Btn_CompileRoot.Visibility, Mode=OneWay, Converter={StaticResource VisibilityToCornerRadius}, ConverterParameter=left}" Visibility="{Binding CurrentFileItem, Converter={StaticResource FileTypeToVisibility}, ConverterParameter=context, Mode=OneWay}" IsEnabled="{Binding IsSaving, Mode=OneWay, Converter={StaticResource BoolInverter}}" ToolTipService.ToolTip="Save &amp; Compile current file"   Click="Btn_Compile_Click" >
										<Button.Content>
											<StackPanel Style="{StaticResource HorizontalStack}">
												<SymbolIcon Symbol="Play"></SymbolIcon>
												<TextBlock  Text="Current" VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}" ></TextBlock>
											</StackPanel>
										</Button.Content>
									</Button>
								</StackPanel>

								<Border Style="{StaticResource Separator}" Visibility="{Binding IsProjectLoaded}" ></Border>


								<DropDownButton x:Name="Modes" ToolTipService.ToolTip="Select compile modes" Click="Modes_Click" Visibility="{Binding IsProjectLoaded, Mode=OneWay}">
									<DropDownButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}">
											<FontIcon Glyph="&#xE9D5;"></FontIcon>
											<TextBlock  Text="Modes"  Style="{ThemeResource BodyTextBlockStyle}" ></TextBlock>
										</StackPanel>
									</DropDownButton.Content>
									<DropDownButton.Flyout>
										<Flyout x:Name="ModeFlyout" Placement="Bottom">
											<StackPanel Orientation="Vertical" Spacing="6">
												<Button  Click="addMode_Click" ToolTipService.ToolTip="Add a Mode" >
													<Button.Content>
														<StackPanel Style="{StaticResource HorizontalStack}">
															<SymbolIcon Symbol="Add"></SymbolIcon>
															<TextBlock  Text="Add mode" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
														</StackPanel>
													</Button.Content>
												</Button>
												<ListView SelectionMode="None" ItemsSource="{Binding CurrentProject.Modes}" >
													<ListView.ItemTemplate>
														<DataTemplate>
															<CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected, Mode=TwoWay}">
																<CheckBox.ContextFlyout>
																	<MenuFlyout>
																		<MenuFlyoutItem  x:Name="RemoveMode" Icon="Delete" Click="RemoveMode_Click" Text="Remove mode"></MenuFlyoutItem>
																	</MenuFlyout>
																</CheckBox.ContextFlyout>
															</CheckBox>
														</DataTemplate>
													</ListView.ItemTemplate>
												</ListView>
											</StackPanel>
										</Flyout>
									</DropDownButton.Flyout>
								</DropDownButton>

								<DropDownButton  x:Name="Environments" ToolTipService.ToolTip="Select Environment(s) to load" Click="Environments_Click" Visibility="{Binding IsProjectLoaded, Mode=OneWay}">
									<DropDownButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xe943;"></FontIcon>
											<TextBlock  Text="Environments"  Style="{ThemeResource BodyTextBlockStyle}" ></TextBlock>
										</StackPanel>
									</DropDownButton.Content>
									<DropDownButton.Flyout>
										<Flyout x:Name="EnvironmentFlyout" Placement="Bottom">
											<StackPanel Orientation="Vertical" Spacing="6">
												<Button  Click="addEnvironment_Click" ToolTipService.ToolTip="Add a Mode" >
													<Button.Content>
														<StackPanel Style="{StaticResource HorizontalStack}">
															<SymbolIcon Symbol="Add"></SymbolIcon>
															<TextBlock  Text="Add environment" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
														</StackPanel>
													</Button.Content>
												</Button>
												<ListView SelectionMode="None" ItemsSource="{Binding CurrentProject.Environments}" >
													<ListView.ItemTemplate>
														<DataTemplate>
															<CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected, Mode=TwoWay}">
																<CheckBox.ContextFlyout>
																	<MenuFlyout>
																		<MenuFlyoutItem  x:Name="RemoveEnvironment" Icon="Delete" Click="RemoveEnvironment_Click" Text="Remove environment"></MenuFlyoutItem>
																	</MenuFlyout>
																</CheckBox.ContextFlyout>
															</CheckBox>
														</DataTemplate>
													</ListView.ItemTemplate>
												</ListView>
											</StackPanel>
										</Flyout>
									</DropDownButton.Flyout>
								</DropDownButton>

								<DropDownButton ToolTipService.ToolTip="Parameters" Visibility="{Binding IsProjectLoaded}" >
									<DropDownButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xEC7A;"></FontIcon>
											<TextBlock  Text="Parameters"  Style="{ThemeResource BodyTextBlockStyle}" ></TextBlock>
										</StackPanel>
									</DropDownButton.Content>
									<DropDownButton.Flyout>
										<Flyout  Placement="Bottom">
											<StackPanel  Style="{StaticResource VerticalStack}" >
												<CheckBox  Content="synctex (β)" IsChecked="{Binding CurrentProject.UseSyncTeX, Mode=TwoWay}"/>
												<CheckBox  Content="noconsole" IsChecked="{Binding CurrentProject.UseNoConsole, Mode=TwoWay}"/>
												<CheckBox  Content="nonstopmode" IsChecked="{Binding CurrentProject.UseNonStopMode, Mode=TwoWay}"/>
												<StackPanel Style="{StaticResource HorizontalStack}">
													<CheckBox  Content="interface" IsChecked="{Binding CurrentProject.UseInterface, Mode=TwoWay}"/>
													<ComboBox IsEnabled="{Binding CurrentProject.UseInterface}" ItemsSource="{Binding InterfaceList}" SelectedItem="{Binding CurrentProject.Interface, Mode=TwoWay}"></ComboBox>
												</StackPanel>
												<StackPanel Style="{StaticResource HorizontalStack}">
													<CheckBox  Content="Other:" IsChecked="{Binding CurrentProject.UseParameters, Mode=TwoWay}"/>
													<TextBox x:Name="Parameters" IsSpellCheckEnabled="False" IsEnabled="{Binding CurrentProject.UseParameters}" Text="{Binding CurrentProject.AdditionalParameters, Mode=TwoWay}"></TextBox>
												</StackPanel>
											</StackPanel>
										</Flyout>
									</DropDownButton.Flyout>
								</DropDownButton>

								<Border Style="{StaticResource Separator}" Visibility="{Binding IsProjectLoaded}" ></Border>

								<Button  Visibility="{Binding IsProjectLoaded}" IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" Name="Btn_Clear"  Click="Btn_Clear_Click" ToolTipService.ToolTip="Remove auxillary files" >
									<Button.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<SymbolIcon Symbol="Delete"></SymbolIcon>
											<TextBlock Text="Clear Workspace" VerticalAlignment="Center"  Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
										</StackPanel>
									</Button.Content>
								</Button>

								<Button x:Name="Btn_Addproject" Visibility="{Binding IsProjectLoaded, Converter={StaticResource BoolToInvisibility}}" Click="Btnaddproject_Click" ToolTipService.ToolTip="Add a project folder" >
									<Button.Content>
										<StackPanel Style="{StaticResource HorizontalStack}">
											<SymbolIcon Symbol="Add"></SymbolIcon>
											<TextBlock  Text="Add Project" VerticalAlignment="Center"  Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
										</StackPanel>
									</Button.Content>
								</Button>

								<TextBlock Visibility="{Binding IsProjectLoaded, Converter={StaticResource BoolToInvisibility}}" Text="Open a project folder to start compiling!"  Foreground="{ThemeResource ForegroundLightColor}"></TextBlock>

							</StackPanel>
						</ScrollViewer>
					</Grid>
				</TabViewItem>

				<TabViewItem  Tag="Editor" IsClosable="False" ToolTipService.ToolTip="Editor: Change the editor's appearance and behaviour">
					<TabViewItem.Header>
						<StackPanel  Tag="Editor" PointerPressed="Tbv_PointerPressed"  Style="{StaticResource HorizontalStack}">
							<FontIcon  Glyph="&#xE70F;"></FontIcon>
							<TextBlock  Text="Editor"></TextBlock>
						</StackPanel>
					</TabViewItem.Header>
					<ScrollViewer Style="{StaticResource RibbonView}" CornerRadius="{Binding CornerRadius_Ribbon}" Margin="{Binding Margin_Ribbon}"  >
						<StackPanel Style="{StaticResource RibbonContent}">

							<FontIcon Glyph="&#xE8E9;" ></FontIcon>
							<NumberBox PointerWheelChanged="Tbx_FontSize_Wheel" Value="{Binding Default.FontSize, Mode=TwoWay}" Minimum="6" Maximum="100" SmallChange="1" LargeChange="4" SpinButtonPlacementMode="{Binding PlacementMode}" ></NumberBox>

							<FontIcon Margin="6,0,0,0" Glyph="&#xE7FD;" ></FontIcon>
							<NumberBox PointerWheelChanged="Tbx_TabLength_Wheel" Value="{Binding Default.TabLength, Mode=TwoWay}" Minimum="0" Maximum="5" SmallChange="1" LargeChange="1" SpinButtonPlacementMode="{Binding PlacementMode}" ></NumberBox>

							<ToggleButton IsChecked="{Binding Default.LineNumbers, Mode=TwoWay}">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xf146;"></FontIcon>
										<TextBlock  Text="Line numbers" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<ToggleButton IsChecked="{Binding Default.LineMarkers, Mode=TwoWay}">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xE946;"></FontIcon>
										<TextBlock  Text="Line markers" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<ToggleButton IsChecked="{Binding Default.CodeFolding, Mode=TwoWay}">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xF168;"></FontIcon>
										<TextBlock  Text="Folding markers" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<ToggleButton IsChecked="{Binding Default.ScrollbarMarkers, Mode=TwoWay}">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xEA41;"></FontIcon>
										<TextBlock  Text="Scrollbar markers" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<!--<ToggleButton IsChecked="{Binding Default.ShowScrollBars, Mode=TwoWay}">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xece7;"></FontIcon>
										<TextBlock  Text="Scrollbars" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>-->

							<ToggleButton IsChecked="{Binding Default.ControlCharacters, Mode=TwoWay}">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xe751;"></FontIcon>
										<TextBlock  Text="Control characters" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<!--<ToggleButton IsEnabled="False" ToolTipService.ToolTip="Text wrapping is not yet implemented. Please wait for the next releases of ConTeXt IDE." IsChecked="{Binding Default.TextWrapping, Mode=TwoWay}">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xe8e4;"></FontIcon>
										<TextBlock  Text="Text wrapping (α)" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>-->



							<!--<ToggleButton IsEnabled="False" IsChecked="False">
                                <ToggleButton.Content>
                                    <StackPanel Style="{StaticResource HorizontalStack}" >
                                        <FontIcon Glyph="&#xE7C4;"></FontIcon>
                                        <TextBlock  Text="Minimap" ></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>-->



							<!--<StackPanel Style="{StaticResource HorizontalStack}" Spacing="0" >
                                <TextBox InputScope="Number" BorderThickness="1,1,0,1" Text="{Binding Default.FontSize, Mode=TwoWay}" CornerRadius="0" ></TextBox>
                                <Button CornerRadius="0" BorderThickness="1" Tag="FontSizeUp" Click="Btn_FontSize_Click">
                                    <Button.Content>
                                        <FontIcon Glyph="&#xE70E;"></FontIcon>
                                    </Button.Content>
                                </Button>
                                <Button CornerRadius="{StaticResource CornerRadiusRight}" BorderThickness="0,1,1,1" Tag="FontSizeDown" Click="Btn_FontSize_Click" >
                                    <Button.Content>
                                        <FontIcon Glyph="&#xE70D;"></FontIcon>
                                    </Button.Content>
                                </Button>
                            </StackPanel>-->


							<Border Style="{StaticResource Separator}" ></Border>

							<!--<ToggleButton IsChecked="{Binding Default.Hover, Mode=TwoWay}">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xE7C9;"></FontIcon>
										<TextBlock  Text="Hover info" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>-->

							<DropDownButton ToolTipService.ToolTip="Enable code compleation and snippets" >
								<DropDownButton.Flyout>
									<Flyout  Placement="Bottom"  >
										<Flyout.FlyoutPresenterStyle>
											<Style TargetType="FlyoutPresenter">
												<Setter Property="MinWidth" Value="400" />
											</Style>
										</Flyout.FlyoutPresenterStyle>
										<StackPanel Orientation="Vertical" Spacing="6" >
											
											<toolkit:SettingsCard Header="Start-stop environments" Description="Like \startsection (\stopsection)" >
												<toolkit:SettingsCard.Resources>
													<x:Double x:Key="SettingsCardWrapThreshold">300</x:Double>
													<x:Double x:Key="SettingsCardWrapNoIconThreshold">50</x:Double>
												</toolkit:SettingsCard.Resources>
												<ToggleSwitch Toggled="CkB_IntelliSense_Click" OnContent="Show" OffContent="Hide" IsOn="{Binding Default.SuggestStartStop, Mode=TwoWay}"/>
											</toolkit:SettingsCard>

											<toolkit:SettingsCard Header="Commands" Description="Other ConTeXt commands like \item">
												<toolkit:SettingsCard.Resources>
													<x:Double x:Key="SettingsCardWrapThreshold">300</x:Double>
													<x:Double x:Key="SettingsCardWrapNoIconThreshold">50</x:Double>
												</toolkit:SettingsCard.Resources>
												<ToggleSwitch Toggled="CkB_IntelliSense_Click" OnContent="Show" OffContent="Hide" IsOn="{Binding Default.SuggestCommands, Mode=TwoWay}"/>
											</toolkit:SettingsCard>

											<toolkit:SettingsCard Header="Command arguments" Description="Shows suggestions for key and key=value options" >
												<toolkit:SettingsCard.Resources>
													<x:Double x:Key="SettingsCardWrapThreshold">300</x:Double>
													<x:Double x:Key="SettingsCardWrapNoIconThreshold">50</x:Double>
												</toolkit:SettingsCard.Resources>
												<ToggleSwitch Toggled="CkB_IntelliSense_Click" OnContent="Show" OffContent="Hide" IsOn="{Binding Default.SuggestArguments, Mode=TwoWay}"/>
											</toolkit:SettingsCard>

											<toolkit:SettingsCard Header="Font switches" Description="Like \ss, \tfa, ...">
												<toolkit:SettingsCard.Resources>
													<x:Double x:Key="SettingsCardWrapThreshold">300</x:Double>
													<x:Double x:Key="SettingsCardWrapNoIconThreshold">50</x:Double>
												</toolkit:SettingsCard.Resources>
												<ToggleSwitch Toggled="CkB_IntelliSense_Click" OnContent="Show" OffContent="Hide" IsOn="{Binding Default.SuggestFontSwitches, Mode=TwoWay}"/>
											</toolkit:SettingsCard>

											<toolkit:SettingsCard Header="TeX primitives" Description="Like \def, \vfill, ...">
												<toolkit:SettingsCard.Resources>
													<x:Double x:Key="SettingsCardWrapThreshold">300</x:Double>
													<x:Double x:Key="SettingsCardWrapNoIconThreshold">50</x:Double>
												</toolkit:SettingsCard.Resources>
												<ToggleSwitch Toggled="CkB_IntelliSense_Click" OnContent="Show" OffContent="Hide" IsOn="{Binding Default.SuggestPrimitives, Mode=TwoWay}"/>
											</toolkit:SettingsCard>

										</StackPanel>
									</Flyout>
								</DropDownButton.Flyout>
								<DropDownButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}">
										<FontIcon Glyph="&#xe8fd;"></FontIcon>
										<TextBlock Text="Suggestions"></TextBlock>
									</StackPanel>
								</DropDownButton.Content>
							</DropDownButton>
							<DropDownButton ToolTipService.ToolTip="Change the syntax highlighting colors" >
								<DropDownButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}">
										<FontIcon Glyph="&#xE790;"></FontIcon>
										<TextBlock Text="Syntax colors"></TextBlock>
									</StackPanel>
								</DropDownButton.Content>
								<DropDownButton.Flyout>
									<Flyout  Placement="Bottom">
										<ListView MinWidth="250" MaxHeight="500" SelectionMode="None" ItemsSource="{Binding Default.TokenColorDefinitions, Mode=OneWay}">
											<ListView.ItemTemplate>
												<DataTemplate>
													<Grid Margin="0,0,0,4" ColumnSpacing="6">
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="*"/>
															<ColumnDefinition Width="Auto"/>
														</Grid.ColumnDefinitions>
														<TextBlock VerticalAlignment="Center" Grid.Column="0" Text="{Binding Token}"></TextBlock>
														<DropDownButton  Grid.Column="1">
															<DropDownButton.Content>
																<Rectangle Height="32" Width="32">
																	<Rectangle.Fill>
																		<SolidColorBrush Color="{Binding Color}"></SolidColorBrush>
																	</Rectangle.Fill>
																</Rectangle>
															</DropDownButton.Content>
															<DropDownButton.Flyout >
																<Flyout Closing="Fly_Color_Closing" Placement="RightEdgeAlignedTop">
																	<ColorPicker Color="{Binding Color, Mode=TwoWay}"   ColorSpectrumShape="Ring"    IsMoreButtonVisible="False"   IsColorSliderVisible="True" IsColorChannelTextInputVisible="True"      IsHexInputVisible="True"      IsAlphaEnabled="False"      IsAlphaSliderVisible="True"      IsAlphaTextInputVisible="True" />
																</Flyout>
															</DropDownButton.Flyout>
														</DropDownButton>
													</Grid>
												</DataTemplate>
											</ListView.ItemTemplate>
										</ListView>
									</Flyout>
								</DropDownButton.Flyout>
							</DropDownButton>


						</StackPanel>

					</ScrollViewer>
				</TabViewItem>

				<TabViewItem Tag="Output"  IsClosable="False" ToolTipService.ToolTip="Output: Change what should happen after compile">
					<TabViewItem.Header>
						<StackPanel  Tag="Output" PointerPressed="Tbv_PointerPressed"  Style="{StaticResource HorizontalStack}">
							<FontIcon  Glyph="&#xE945;"></FontIcon>
							<TextBlock  Text="Output"></TextBlock>
						</StackPanel>
					</TabViewItem.Header>
					<ScrollViewer Style="{StaticResource RibbonView}" CornerRadius="{Binding CornerRadius_Ribbon, Mode=OneWay}" Margin="{Binding Margin_Ribbon}" >
						<StackPanel Style="{StaticResource RibbonContent}">

							<ToggleButton IsChecked="{Binding Default.AutoOpenPDF, Mode=TwoWay}" >
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xEA90;"></FontIcon>
										<TextBlock  Text="Open PDF after compile"></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<StackPanel Style="{StaticResource HorizontalStack}" Spacing="0">
								<ToggleButton CornerRadius="{StaticResource CornerRadiusLeft}" IsChecked="{Binding Default.InternalViewer, Mode=TwoWay}">
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xE89F;"></FontIcon>
											<TextBlock  Text="Internal viewer" ></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>
								<ToggleButton CornerRadius="{StaticResource CornerRadiusRight}" BorderThickness="0,1,1,1"  IsChecked="{Binding Default.AutoOpenPDFOnFileOpen, Mode=TwoWay}" >
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xEA90;"></FontIcon>
											<TextBlock  Text="Open PDF after file change" ></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>
							</StackPanel>

							<DropDownButton IsEnabled="{Binding Default.InternalViewer, Converter={StaticResource BoolInverter}}" >
								<DropDownButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}">
										<FontIcon Glyph="&#xE8A7;"></FontIcon>
										<TextBlock Text="{Binding Default.CurrentPDFViewer.Name}"  Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
									</StackPanel>
								</DropDownButton.Content>
								<DropDownButton.Flyout>
									<Flyout Closing="Fly_PDFViewer_Closing">
										<StackPanel Style="{StaticResource VerticalStack}">
											<Button Click="Btn_AddPDFViewer_Click">
												<StackPanel Style="{StaticResource HorizontalStack}">
													<FontIcon Glyph="&#xE710;"></FontIcon>
													<TextBlock Text="Add external PDF viewer"></TextBlock>
												</StackPanel>
											</Button>
											<ListView SelectionMode="Single" ItemsSource="{Binding Default.PDFViewerList}" SelectedItem="{Binding Default.CurrentPDFViewer, Mode=TwoWay}">
												<ListView.ItemTemplate>
													<DataTemplate>
														<Grid ColumnSpacing="6">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="*" />
																<ColumnDefinition Width="3*" />
															</Grid.ColumnDefinitions>
															<TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{Binding Name}"></TextBlock>
															<TextBox  Grid.Column="1" MaxWidth="300" VerticalAlignment="Stretch" Text="{Binding Path, Mode=TwoWay}" Visibility="{Binding Path, Converter={StaticResource StringToVisibility}}"></TextBox>
														</Grid>
													</DataTemplate>
												</ListView.ItemTemplate>
											</ListView>
										</StackPanel>
									</Flyout>
								</DropDownButton.Flyout>
							</DropDownButton>

							<ToggleButton  BorderThickness="0,1,1,1" IsChecked="{Binding Default.ShowMarkdownViewer, Mode=TwoWay}" IsEnabled="False" >
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xE8A1;"></FontIcon>
										<TextBlock Text="Markdown preview (β)"   ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<Border Style="{StaticResource Separator}" ></Border>

							<ToggleButton IsEnabled="{Binding Default.ShowLog}" IsChecked="{Binding Default.ShowCompilerOutput, Mode=TwoWay}" >
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xe945;"></FontIcon>
										<TextBlock  Text="Compiler output"  Foreground="{ThemeResource ForegroundColor}"></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<StackPanel Style="{StaticResource HorizontalStack}" Spacing="0">
								<ToggleButton CornerRadius="{StaticResource CornerRadiusLeft}" IsChecked="{Binding Default.AutoOpenLOG, Mode=TwoWay}">
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xEA37;"></FontIcon>
											<TextBlock  Text="Auto-open LOG file" ></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>
								<ToggleButton CornerRadius="{StaticResource CornerRadiusRight}" BorderThickness="0,1,1,1" IsEnabled="{Binding Default.AutoOpenLOG}" IsChecked="{Binding Default.AutoOpenLOGOnlyOnError, Mode=TwoWay}" >
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xE783;"></FontIcon>
											<TextBlock  Text="only on error" ></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>
							</StackPanel>
						</StackPanel>
					</ScrollViewer>
				</TabViewItem>

				<TabViewItem  Tag="View" IsClosable="False" ToolTipService.ToolTip="View: Change the appearance of this app">
					<TabViewItem.Header>
						<StackPanel  Tag="View" PointerPressed="Tbv_PointerPressed" Style="{StaticResource HorizontalStack}">
							<FontIcon  Glyph="&#xF246;"></FontIcon>
							<TextBlock  Text="View"></TextBlock>
						</StackPanel>
					</TabViewItem.Header>
					<ScrollViewer Style="{StaticResource RibbonView}" CornerRadius="{Binding CornerRadius_Ribbon}" Margin="{Binding Margin_Ribbon}"  >
						<StackPanel Style="{StaticResource RibbonContent}" ToolTipService.ToolTip="Select a Theme">
							<FontIcon  Glyph="&#xE793;"></FontIcon>
							<ComboBox x:Name="CbB_Theme" CornerRadius="{StaticResource CornerRadiusRight}" ItemsSource="{Binding Default.ThemeOption}" SelectionChangedTrigger="Always" DropDownClosed="CbB_Theme_SelectionChanged" SelectedItem="{Binding Default.Theme, Mode=TwoWay}"  FontFamily="Segoe UI"  >
								<ComboBox.Resources>
									<Style TargetType="Popup">
										<Setter Property="RequestedTheme" Value="{x:Bind RequestedTheme}"></Setter>
									</Style>
								</ComboBox.Resources>
							</ComboBox>

							<FontIcon Margin="6,0,0,0" Glyph="&#xF354;"></FontIcon>
							<DropDownButton ToolTipService.ToolTip="Select an accent color" Padding="0,0,6,0" CornerRadius="{StaticResource CornerRadiusRight}">
								<DropDownButton.Content>
									<Border  Padding="0" Width="36" Height="36" ToolTipService.ToolTip="{Binding AccentColor.Name}" BorderThickness="0" >
										<Grid  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  >
											<Grid.Background>
												<SolidColorBrush Color="{Binding AccentColorLow, Source={StaticResource AccentColorSetting}}"></SolidColorBrush>
											</Grid.Background>
										</Grid>
									</Border>
								</DropDownButton.Content>
								<DropDownButton.Flyout>
									<Flyout x:Name="ColorsFlyout" Opening="ColorsFlyout_Opening" Placement="Bottom">
										<StackPanel Style="{StaticResource VerticalStack}">
											<Button VerticalAlignment="Center" x:Name="ColorReset" Click="ColorReset_Click">
												<StackPanel Style="{StaticResource HorizontalStack}">
													<Rectangle VerticalAlignment="Stretch" Height="26" Width="26" HorizontalAlignment="Stretch" >
														<Rectangle.Fill>
															<SolidColorBrush Color="{Binding SystemAccentColor}" ></SolidColorBrush>
														</Rectangle.Fill>
													</Rectangle>
													<TextBlock Text="Use system accent color"></TextBlock>
												</StackPanel>
											</Button>
											<GridView    x:Name="ColorsGridView"    IsItemClickEnabled="True"  SelectionMode="Single"  ItemsSource="{Binding AccentColors, Mode=OneTime}" SelectedItem="{Binding AccentColor, Mode=TwoWay}" ItemClick="ColorsGridView_ItemClick" >
												<GridView.ItemsPanel>
													<ItemsPanelTemplate>
														<ItemsWrapGrid MaximumRowsOrColumns="8" Orientation="Horizontal"/>
													</ItemsPanelTemplate>
												</GridView.ItemsPanel>
												<GridView.ItemTemplate>
													<DataTemplate>
														<Border Height="36" Width="36" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
															<Rectangle ToolTipService.ToolTip="{Binding Name}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
																<Rectangle.Fill>
																	<SolidColorBrush Color="{Binding Color}"></SolidColorBrush>
																</Rectangle.Fill>
															</Rectangle>
														</Border>
													</DataTemplate>
												</GridView.ItemTemplate>
											</GridView>
										</StackPanel>
									</Flyout>
								</DropDownButton.Flyout>
							</DropDownButton>

							<FontIcon Margin="6,0,0,0" Glyph="&#xE737;" ToolTipService.ToolTip="Select a backdrop"></FontIcon>
							<ComboBox CornerRadius="{StaticResource CornerRadiusRight}" ItemsSource="{Binding Default.BackdropOption}" SelectionChangedTrigger="Always" DropDownClosed="CbB_Theme_SelectionChanged" SelectedItem="{Binding Default.Backdrop, Mode=TwoWay}"   >
							</ComboBox>

							<FontIcon Margin="6,0,0,0" Glyph="&#xF577;"  ToolTipService.ToolTip="Set the ribbon margin and spacings" ></FontIcon>
							<NumberBox PointerWheelChanged="Nbx_RibbonMarginValue_Wheel" Value="{Binding Default.RibbonMarginValue, Mode=TwoWay}" Minimum="0" Maximum="6" SmallChange="1" LargeChange="1" SpinButtonPlacementMode="{Binding PlacementMode}" ></NumberBox>

							<Border Style="{StaticResource Separator}" ></Border>

							<StackPanel Style="{StaticResource HorizontalStack}" Spacing="0">
								<ToggleButton CornerRadius="{StaticResource CornerRadiusLeft}" IsChecked="{Binding Default.ShowProjectPane, Mode=TwoWay}" >
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xEA49;"></FontIcon>
											<TextBlock  Text="Project pane" Foreground="{ThemeResource ForegroundColor}"></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>
								<ToggleButton CornerRadius="{StaticResource CornerRadiusRight}" BorderThickness="0,1,1,1" IsChecked="{Binding Default.ShowOutline, Mode=TwoWay}" Checked="Tbn_ShowOutline_Checked" >
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xe8fd;"></FontIcon>
											<TextBlock  Text="Document outline"  Foreground="{ThemeResource ForegroundColor}"></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>
							</StackPanel>

							<ToggleButton IsChecked="{Binding Default.ShowLog, Mode=TwoWay}" >
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xEA37;"></FontIcon>
										<TextBlock  Text="Application log"  Foreground="{ThemeResource ForegroundColor}"></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>


							<Border Style="{StaticResource Separator}" ></Border>

							<StackPanel Style="{StaticResource HorizontalStack}" Spacing="0">
								<ToggleButton  IsChecked="{Binding Default.StartWithLastActiveProject, Mode=TwoWay}">
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xE81C;"></FontIcon>
											<TextBlock  Text="Auto-open last project"  Foreground="{ThemeResource ForegroundColor}"></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>
								<!--<ToggleButton CornerRadius="{StaticResource CornerRadiusRight}" BorderThickness="0,1,1,1" IsEnabled="{Binding Default.StartWithLastActiveProject, Mode=OneWay}" IsChecked="{Binding Default.StartWithLastOpenFiles, Mode=TwoWay}" >
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<TextBlock  Text="Remember opened files"></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>-->
							</StackPanel>

							<Border Style="{StaticResource Separator}" ></Border>

							<ToggleButton IsChecked="{Binding Default.MultiInstance, Mode=TwoWay}" ToolTipService.ToolTip="Allow multiple app instances and file activation">
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xF7ED;"></FontIcon>
										<TextBlock  Text="Allow multiple app instances (β)"  Foreground="{ThemeResource ForegroundColor}"></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

						</StackPanel>
					</ScrollViewer>
				</TabViewItem>

				<TabViewItem Tag="ConTeXt" IsClosable="False" ToolTipService.ToolTip="ConTeXt: Modules and Documentation">
					<TabViewItem.Header>
						<StackPanel  Tag="ConTeXt" PointerPressed="Tbv_PointerPressed" Style="{StaticResource HorizontalStack}">
							<FontIcon  Glyph="&#xE71D;"></FontIcon>
							<TextBlock  Text="ConTeXt"></TextBlock>
						</StackPanel>
					</TabViewItem.Header>
					<ScrollViewer Style="{StaticResource RibbonView}" CornerRadius="{Binding CornerRadius_Ribbon}" Margin="{Binding Margin_Ribbon}" >
						<StackPanel Style="{StaticResource RibbonContent}">
							<StackPanel Style="{StaticResource HorizontalStack}" Spacing="0">
								<DropDownButton  ToolTipService.ToolTip="Open a Manual" CornerRadius="{StaticResource CornerRadiusLeft}">
									<DropDownButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<SymbolIcon Symbol="Help"></SymbolIcon>
											<TextBlock  Text="PDF Manuals" VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}" ></TextBlock>
										</StackPanel>

									</DropDownButton.Content>
									<DropDownButton.Flyout>
										<Flyout>
											<ListView  SelectionMode="None" IsItemClickEnabled="True" ItemClick="Help_ItemClick" ItemsSource="{Binding HelpFiles}" >
												<ListView.ItemTemplate>
													<DataTemplate>
														<StackPanel Margin="0,0,0,6" Spacing="0">
															<TextBlock Text="{Binding FriendlyName}" Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
															<TextBlock Text="{Binding FileName}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource ForegroundLightColor}"></TextBlock>
														</StackPanel>
													</DataTemplate>
												</ListView.ItemTemplate>
											</ListView>
										</Flyout>
									</DropDownButton.Flyout>
								</DropDownButton>
								<ToggleButton  BorderThickness="0,1,1,1" ToolTipService.ToolTip="Open ConTeXt Manuals in the internal viewer" IsChecked="{Binding Default.HelpPDFInInternalViewer, Mode=TwoWay}" IsEnabled="{Binding Default.InternalViewer, Mode=OneWay}" CornerRadius="{StaticResource CornerRadiusRight}">
									<ToggleButton.Content>
										<StackPanel Style="{StaticResource HorizontalStack}" >
											<FontIcon Glyph="&#xE89F;"></FontIcon>
											<TextBlock  Text="open internally"  ></TextBlock>
										</StackPanel>
									</ToggleButton.Content>
								</ToggleButton>
							</StackPanel>

							<ToggleButton IsChecked="{Binding ShowCommandReference, Mode=TwoWay}" >
								<ToggleButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<FontIcon Glyph="&#xF168;"></FontIcon>
										<TextBlock Text="Command reference" Foreground="{ThemeResource ForegroundColor}" ></TextBlock>
									</StackPanel>
								</ToggleButton.Content>
							</ToggleButton>

							<Border Style="{StaticResource Separator}" ></Border>



							<DropDownButton ToolTipService.ToolTip="Manage ConTeXt modules"  IsEnabled="{Binding IsInstalling, Mode=OneWay, Converter={StaticResource BoolInverter}}" >
								<DropDownButton.Content>
									<StackPanel Style="{StaticResource HorizontalStack}" >
										<SymbolIcon Symbol="AllApps"></SymbolIcon>
										<TextBlock  Text="Manage Modules" VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
									</StackPanel>
								</DropDownButton.Content>
								<DropDownButton.Flyout>
									<Flyout Placement="Bottom"  >

										<Flyout.FlyoutPresenterStyle >
											<Style TargetType="FlyoutPresenter">
												<Setter Property="MaxWidth" Value="500" />
											</Style>
										</Flyout.FlyoutPresenterStyle>
										
										<ItemsControl  Margin="0" Padding="0" MaxWidth="400"  IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}, Mode=OneWay}" ItemsSource="{Binding ContextModules}"  >
											<!--<ItemsControl.ItemContainerStyle>
												<Style TargetType="ItemContainer">
													<Setter Property="HorizontalContentAlignment"  Value="Stretch"></Setter>
													--><!--<Setter Property="Margin"  Value="0,0,0,6"></Setter>--><!--
												</Style>
											</ItemsControl.ItemContainerStyle>-->
											<ItemsControl.ItemTemplate>
												<DataTemplate>

													<toolkit:SettingsCard Header="{Binding Name}" Description="{Binding Description}" Margin="3">
														<toolkit:SettingsCard.Resources>
															<x:Double x:Key="SettingsCardWrapThreshold">300</x:Double>
															<x:Double x:Key="SettingsCardWrapNoIconThreshold">50</x:Double>
														</toolkit:SettingsCard.Resources>
														<StackPanel Style="{StaticResource HorizontalStack}">
															<Button Click="Btn_InstallModule_Click" ToolTipService.ToolTip="Download and install the latest version">
																<Button.Content>
																	<SymbolIcon Symbol="Download"></SymbolIcon>
																</Button.Content>
															</Button>
															<Button Click="Btn_RemoveModule_Click" IsEnabled="{Binding IsInstalled, Mode=OneWay}" ToolTipService.ToolTip="Remove module files">
																<Button.Content>
																	<SymbolIcon Symbol="Delete"></SymbolIcon>
																</Button.Content>
															</Button>
														</StackPanel>
													</toolkit:SettingsCard>
													
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
									</Flyout>
								</DropDownButton.Flyout>
							</DropDownButton>

							<Button Visibility="{Binding Default.DistributionInstalled, Mode=OneWay}" IsEnabled="{Binding IsInstalling, Mode=OneWay, Converter={StaticResource BoolInverter}}" ToolTipService.ToolTip="Update ConTeXt distribution"   Click="Update_Click" >
								<Button.Content>
									<StackPanel Style="{StaticResource HorizontalStack}">
										<FontIcon Glyph="&#xECC5;" ></FontIcon>
										<TextBlock Text="Update ConTeXt" VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}" ></TextBlock>
									</StackPanel>
								</Button.Content>
							</Button>
							<TextBlock Style="{StaticResource CaptionTextBlockStyle}" Foreground="{ThemeResource ForegroundLightColor}" VerticalAlignment="Center" TextWrapping="WrapWholeWords" MaxLines="2">
								<Run Text="ConTeXt Version:" />
								<LineBreak/>
								<Run Text="{Binding Default.ContextVersion}"></Run>
							</TextBlock>

						</StackPanel>
					</ScrollViewer>
				</TabViewItem>
			</TabView.TabItems>
		</TabView>

		<InfoBar BorderThickness="0"  CornerRadius="{Binding CornerRadius_Ribbon}" Margin="{Binding InfobarMargin}" Grid.Row="1" Visibility="{Binding InfoOpen}" IsOpen="{Binding InfoOpen, Mode=TwoWay}" Severity="{Binding InfoSeverity, Mode=OneWay}"    Title="{Binding InfoTitle, Mode=OneWay}"    Message="{Binding InfoText, Mode=OneWay}" />

		<Grid x:Name="ApplicationGrid" Grid.Row="2" Background="{Binding ApplicationBackgroundBrush, Source={StaticResource AccentColorSetting}}" >
			<Grid.BackgroundTransition>
				<BrushTransition/>
			</Grid.BackgroundTransition>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"></RowDefinition>
			</Grid.RowDefinitions>

			<Grid Grid.Row="1" x:Name="ContentGrid"  >
				<Grid.RowDefinitions>
					<RowDefinition Height="*"></RowDefinition>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="ContentGridProjectPaneColumn" Width="{Binding Default.ShowProjectPane, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=300}"></ColumnDefinition>
					<ColumnDefinition x:Name="ContentGridSplitter" Width="{Binding Default.ShowProjectPane, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=Auto}"></ColumnDefinition>
					<ColumnDefinition x:Name="ContentGridMainGridColumn" Width="*"></ColumnDefinition>
					<ColumnDefinition Width="Auto"></ColumnDefinition>
				</Grid.ColumnDefinitions>
				<Grid x:Name="ProjectsGrid" Visibility="{Binding Default.ShowProjectPane}" >
					<Grid.RowDefinitions>
						<RowDefinition x:Name="ProjectsGridCurrentRow" Height="*"></RowDefinition>
						<RowDefinition x:Name="ProjectsGridSplitter" Height="{Binding Default.ShowOutline, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=Auto}"></RowDefinition>
						<RowDefinition x:Name="ProjectsGridLibraryRow" Height="{Binding Default.ShowOutline, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=*}"></RowDefinition>
					</Grid.RowDefinitions>

					<Grid x:Name="ProjectsGridCurrent" Grid.Row="0" Style="{StaticResource GridCell}" Padding="0,12,6,12">
						<Grid.BackgroundTransition>
							<BrushTransition />
						</Grid.BackgroundTransition>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<animations:Implicit.ShowAnimations>
							<animations:TranslationAnimation Duration="0:0:0.25" From="-50, 0, 0" To="0" ></animations:TranslationAnimation>
							<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
						</animations:Implicit.ShowAnimations>

						<TreeView  Grid.Row="0" SelectionMode="None"   ScrollViewer.VerticalScrollBarVisibility="Auto"  ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}" ItemsSource="{Binding CurrentProject.Directory, Mode=OneWay}" 
					  CanReorderItems="False" AllowDrop="False" DragItemsStarting="TreeView_DragItemsStarting"  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" >
							<TreeView.ItemContainerTransitions>
								<TransitionCollection />
							</TreeView.ItemContainerTransitions>
							<TreeView.Transitions>
								<TransitionCollection></TransitionCollection>
							</TreeView.Transitions>
						</TreeView>
					</Grid>

					<toolkit:GridSplitter Style="{StaticResource RowSplitter}" MinHeight="{Binding SplitterWidth}" Margin="12,4,8,4" Grid.Row="1"  Visibility="{Binding Default.ShowOutline}"/>

					<Grid x:Name="ProjectsGridOutline" Grid.Row="2" Style="{StaticResource GridCell}" Visibility="{Binding Default.ShowOutline}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Grid.BackgroundTransition>
							<BrushTransition />
						</Grid.BackgroundTransition>
						<animations:Implicit.ShowAnimations>
							<animations:TranslationAnimation Duration="0:0:0.25" From="-50, 50, 0" To="0" ></animations:TranslationAnimation>
							<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
						</animations:Implicit.ShowAnimations>
						<TextBlock Grid.Row="0" HorizontalAlignment="Left" Visibility="{Binding IsFileItemLoaded}"  Text="{Binding CurrentFileItem.FileName}" Style="{ThemeResource BaseTextBlockStyle}" FontWeight="Bold"></TextBlock>

						<ListView Grid.Row="1" x:Name="LsV_OutlineItems" IsItemClickEnabled="True" ItemClick="LsV_OutlineItems_ItemClick" ItemsSource="{Binding OutlineItems}" SelectedItem="{Binding SelectedOutlineItem, Mode=TwoWay}" SelectionChanged="LsV_OutlineItems_SelectionChanged" >
							<ListView.ItemContainerTransitions>
								<TransitionCollection></TransitionCollection>
							</ListView.ItemContainerTransitions>
							<ListView.Transitions>
								<TransitionCollection></TransitionCollection>
							</ListView.Transitions>

							<ListView.ItemTemplate>
								<DataTemplate>
									<Grid ColumnSpacing="6" >
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"></RowDefinition>
											<RowDefinition Height="Auto"></RowDefinition>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"></ColumnDefinition>
											<ColumnDefinition Width="3*"></ColumnDefinition>
											<ColumnDefinition Width="*"></ColumnDefinition>
										</Grid.ColumnDefinitions>
										<Grid Grid.Column="0" Grid.RowSpan="2" Width="{Binding SectionLevel, Converter={StaticResource Multiply}, ConverterParameter=10}" >

										</Grid>
										<TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Text="{Binding Row}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource ForegroundLightColor}" HorizontalAlignment="Right"></TextBlock>
										<TextBlock Grid.Column="1" Text="{Binding Title}" Style="{ThemeResource BodyTextBlockStyle}" TextWrapping="NoWrap"  VerticalAlignment="Center" ></TextBlock>
										<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding SectionType}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource ForegroundLightColor}" TextWrapping="Wrap" VerticalAlignment="Center"  ></TextBlock>
									</Grid>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
					</Grid>
				</Grid>
				<toolkit:GridSplitter  Style="{StaticResource ColumnSplitter}" MinWidth="{Binding SplitterWidth}" Grid.Column="1"/>
				<Grid x:Name="MainGrid"  Grid.Column="2" >
					<Grid.RowDefinitions>
						<RowDefinition x:Name="IDEGridRow" Height="2*"></RowDefinition>
						<RowDefinition x:Name="LogGridSplitter" Height="{Binding Default.ShowLog, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=Auto}"></RowDefinition>
						<RowDefinition x:Name="LogGridRow" Height="{Binding Default.ShowLog, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=200}"></RowDefinition>
					</Grid.RowDefinitions>
					<Grid x:Name="IDEGrid" Grid.Row="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="EditorGridColumn" Width="2*"></ColumnDefinition>
							<ColumnDefinition x:Name="PDFGridSplitter" Width="{Binding Default.InternalViewer, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=Auto}"></ColumnDefinition>
							<ColumnDefinition x:Name="PDFGridColumn" Width="{Binding Default.InternalViewer, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=*}" MinWidth="{Binding Default.InternalViewer, Mode=OneWay, Converter={StaticResource BoolToMinWidth}, ConverterParameter=250}"></ColumnDefinition>
						</Grid.ColumnDefinitions>

						<Grid x:Name="EditGrid" Grid.Column="0" Style="{StaticResource GridCell}" RowSpacing="0" Padding="0">
							<Grid.BackgroundTransition>
								<BrushTransition />
							</Grid.BackgroundTransition>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"></RowDefinition>
								<RowDefinition Height="Auto"></RowDefinition>
								<RowDefinition Height="*"></RowDefinition>
							</Grid.RowDefinitions>
							<Grid Margin="6,6,6,0" CornerRadius="2" Background="#33fff700" x:Name="ErrorGrid" Grid.Row="0" Visibility="{Binding IsTeXError}">
								<ScrollViewer MaxHeight="200" HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Hidden">
									<Grid  Padding="6,6,6,6"  ColumnSpacing="6" >
										<Grid.Resources>
											<Style TargetType="TextBlock">
												<Setter Property="VerticalAlignment" Value="Top"></Setter>
												<Setter Property="TextWrapping" Value="WrapWholeWords"></Setter>
												<Setter Property="Margin" Value="0,4,0,0"></Setter>
											</Style>
										</Grid.Resources>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="2*"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<Grid Grid.Column="0" ColumnSpacing="6">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<TextBlock Grid.Column="0" Grid.Row="0" Text="Lua error:" Visibility="{Binding ConTeXtErrorMessage.lastluaerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding ConTeXtErrorMessage.lastluaerror}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lastluaerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="0" Grid.Row="1" Text="TeX error:" Visibility="{Binding ConTeXtErrorMessage.lasttexerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ConTeXtErrorMessage.lasttexerror}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lasttexerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="0" Grid.Row="2" Text="Error at:" Visibility="{Binding ConTeXtErrorMessage.lastcontext, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding ConTeXtErrorMessage.lastcontext}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lastcontext, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="0" Grid.Row="3" Text="TeX error help:" Visibility="{Binding ConTeXtErrorMessage.lasttexhelp, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding ConTeXtErrorMessage.lasttexhelp}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lasttexhelp, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
										</Grid>
										<Grid Grid.Column="1" ColumnSpacing="6">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<TextBlock Grid.Column="0" Grid.Row="0" Text="File:"></TextBlock>
											<TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding ConTeXtErrorMessage.filename}" IsTextSelectionEnabled="True"></TextBlock>
											<TextBlock Grid.Column="0" Grid.Row="1" Text="Line number:"></TextBlock>
											<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ConTeXtErrorMessage.linenumber}" IsTextSelectionEnabled="True"></TextBlock>
											<TextBlock Grid.Column="0" Grid.Row="2" Text="Lua error line:" Visibility="{Binding ConTeXtErrorMessage.luaerrorline, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding ConTeXtErrorMessage.luaerrorline}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.luaerrorline, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
											<TextBlock Grid.Column="0" Grid.Row="3" Text="Offset:"></TextBlock>
											<TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding ConTeXtErrorMessage.offset}" IsTextSelectionEnabled="True"></TextBlock>
										</Grid>
									</Grid>
								</ScrollViewer>
								<Button Click="Btn_CloseError_Click" HorizontalAlignment="Right" VerticalAlignment="Top" Height="20" Width="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="4" Margin="6">
									<Viewbox MaxHeight="12" MaxWidth="12">
										<SymbolIcon Symbol="Clear"></SymbolIcon>
									</Viewbox>
								</Button>
							</Grid>

							<TabView x:Name="Tabs" Grid.Row="1"  Padding="4,0,4,0" Margin="0,6,0,0"
					   TabWidthMode="SizeToContent"  IsAddTabButtonVisible="False" 
					  CloseButtonOverlayMode="Auto" 
				   TabCloseRequested="Tabs_TabCloseRequested" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
					  CanDragTabs="False" 
					  CanReorderTabs="True"  TabItemsSource="{Binding FileItems}" SelectedItem="{Binding CurrentFileItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  SelectionChanged="TbV_EditorTabView_SelectionChanged"
					  AllowDrop="True"  TabStripDragOver="EditorTabViewDrag" BorderThickness="0"  TabStripDrop="EditorTabViewDrop"  FontFamily="Segoe">
								<TabView.TabStripHeader>
									<Grid Width="{Binding Margin_Ribbon}"></Grid>
								</TabView.TabStripHeader>

								<TabView.TabStripFooter>
									<Grid Background="Transparent" DragOver="EditorTabViewDrag" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowDrop="True" Drop="EditorTabViewDrop">
									</Grid>
								</TabView.TabStripFooter>

								<TabView.TabItemTemplate>
									<DataTemplate x:DataType="models:FileItem">
										<TabViewItem  CanDrag="False" ToolTipService.ToolTip="{Binding FileName, Mode=OneWay}" IsClosable="{Binding IsPinned, Mode=OneWay, Converter={StaticResource BoolInverter}}">
											<TabViewItem.ContextFlyout>
												<MenuFlyout>
													<MenuFlyoutItem Visibility="{Binding Converter={StaticResource FileTypeToVisibility}, ConverterParameter=context, Mode=OneWay}" IsEnabled="{Binding Source={StaticResource VM}, Path=Default.DistributionInstalled}" x:Name="CompileFlyoutButton" Icon="Play" Click="Compile_Click" Text="Compile"></MenuFlyoutItem>
													<MenuFlyoutItem x:Name="SetRoot" Icon="Favorite" Click="SetRoot_Click" Visibility="{Binding Converter={StaticResource SetRootVisibility}}" IsEnabled="{Binding IsRoot, Converter={StaticResource BoolInverter}}" Text="Set as Main File"></MenuFlyoutItem>
													<MenuFlyoutSeparator/>
													<MenuFlyoutItem x:Name="Save" Icon="Save" Click="Save_Click" IsEnabled="{Binding IsChanged}" Text="Save"></MenuFlyoutItem>
													<MenuFlyoutItem x:Name="Rename" Icon="Rename" Click="Rename_Click" Text="Rename"></MenuFlyoutItem>
													<MenuFlyoutSeparator/>
													<MenuFlyoutItem x:Name="Pin" IsEnabled="True" Icon="Pin" Click="Pin_Click" Text="Toggle pin"></MenuFlyoutItem>
												</MenuFlyout>
											</TabViewItem.ContextFlyout>
											<TabViewItem.HeaderTemplate>
												<DataTemplate x:DataType="models:FileItem">
													<StackPanel MaxWidth="90" Style="{StaticResource HorizontalStack}" Spacing="0" Padding="0" Margin="0">
														<TextBlock FontWeight="{Binding IsRoot, Converter={StaticResource BoolToFontWeight}}" FontFamily="Segoe" Visibility="{Binding IsChanged}" Text="*" Foreground="{ThemeResource TextFillColorPrimary}"></TextBlock>
														<TextBlock FontWeight="{Binding IsRoot, Converter={StaticResource BoolToFontWeight}}" Visibility="{Binding IsPinned, Converter={StaticResource BoolToInvisibility}}" FontFamily="Segoe" Text="{Binding FileName}" Foreground="{ThemeResource TextFillColorPrimary}"></TextBlock>
													</StackPanel>
												</DataTemplate>
											</TabViewItem.HeaderTemplate>
											<TabViewItem.IconSource>
												<SymbolIconSource Symbol="Document" />
											</TabViewItem.IconSource>
											<TabViewItem.ContentTemplate>
												<DataTemplate></DataTemplate>
											</TabViewItem.ContentTemplate>


										</TabViewItem>
									</DataTemplate>
								</TabView.TabItemTemplate>
							</TabView>

							<Grid Grid.Row="2" Visibility="{Binding IsFileItemLoaded}">
								<animations:Implicit.ShowAnimations>
									<animations:OpacityAnimation  Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
								</animations:Implicit.ShowAnimations>
								<animations:Implicit.HideAnimations>
									<animations:OpacityAnimation  Duration="0:0:0.25" From="1.0" To="0"></animations:OpacityAnimation>
								</animations:Implicit.HideAnimations>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid  >
									<codeeditor:CodeWriter Grid.Row="0" x:Name="Codewriter" CornerRadius="{Binding CornerRadius_Ribbon}" Loaded="Codewriter_Loaded" InfoMessage="Codewriter_InfoMessage" ErrorOccured="Codewriter_ErrorOccured" TextChanged="Codewriter_TextChanged" Initialized="Codewriter_Initialized" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="{Binding Default.FontSize, Mode=TwoWay}" TabLength="{Binding Default.TabLength}" Background="{x:Bind CW_Background}" FontFamily="Consolas" RequestedTheme="{Binding Default.Theme, Converter={StaticResource StringToTheme}}" Language="{Binding CurrentFileItem.Language, Mode=TwoWay}" ShowLineNumbers="{Binding Default.LineNumbers}" ShowScrollbars="{Binding Default.ShowScrollBars}" ShowLineMarkers="{Binding Default.LineMarkers}" ShowControlCharacters="{Binding Default.ControlCharacters}" ShowScrollbarMarkers="{Binding Default.ScrollbarMarkers}" IsWrappingEnabled="{Binding Default.TextWrapping}" IsFoldingEnabled="{Binding Default.CodeFolding}" Text="{Binding CurrentFileItem.FileContent, Mode=TwoWay}" CurrentLine="{Binding CurrentFileItem.CurrentLine, Mode=TwoWay}" EditActionHistory="{Binding CurrentFileItem.EditActionHistory}" ></codeeditor:CodeWriter>
								</Grid>
								<Grid  Grid.Row="1" MaxHeight="24" Padding="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid Grid.Column="0" Visibility="{Binding Default.ShowProjectPane, Converter={StaticResource BoolToInvisibility}}">
										<DropDownButton  Padding="2,0,2,0" MinHeight="10" Visibility="{Binding Default.ShowOutline, Converter={StaticResource BoolToVisibility}}">
											<animations:Implicit.ShowAnimations>
												<animations:TranslationAnimation Duration="0:0:0.25" From="0, 50, 0" To="0"/>
												<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"/>
											</animations:Implicit.ShowAnimations>
											<animations:Implicit.HideAnimations>
												<animations:TranslationAnimation Duration="0:0:0.25" From="0" To="0, 50, 0"/>
												<animations:OpacityAnimation Duration="0:0:0.25" From="1.0" To="0"/>
											</animations:Implicit.HideAnimations>
											<DropDownButton.Content>
												<TextBlock Text="Outline" Style="{ThemeResource CaptionTextBlockStyle}" />
											</DropDownButton.Content>
											<DropDownButton.Flyout>
												<Flyout>
													<ListView x:Name="LsV_OutlineItems_Small" MinWidth="250" MaxHeight="500" IsItemClickEnabled="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemClick="LsV_OutlineItems_ItemClick" ItemsSource="{Binding OutlineItems}" SelectedItem="{Binding SelectedOutlineItem,  Mode=TwoWay}" SelectionChanged="LsV_OutlineItems_SelectionChanged" >
														<ListView.ItemContainerTransitions>
															<TransitionCollection></TransitionCollection>
														</ListView.ItemContainerTransitions>
														<ListView.Transitions>
															<TransitionCollection></TransitionCollection>
														</ListView.Transitions>

														<ListView.ItemTemplate>
															<DataTemplate>
																<Grid ColumnSpacing="6" >
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto"></RowDefinition>
																		<RowDefinition Height="Auto"></RowDefinition>
																	</Grid.RowDefinitions>
																	<Grid.ColumnDefinitions>
																		<ColumnDefinition Width="Auto"></ColumnDefinition>
																		<ColumnDefinition Width="3*"></ColumnDefinition>
																		<ColumnDefinition Width="*"></ColumnDefinition>
																	</Grid.ColumnDefinitions>
																	<Grid Grid.Column="0" Grid.RowSpan="2" Width="{Binding SectionLevel, Converter={StaticResource Multiply}, ConverterParameter=10}" >

																	</Grid>
																	<TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Text="{Binding Row}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource ForegroundLightColor}" HorizontalAlignment="Right"></TextBlock>
																	<TextBlock Grid.Column="1" Text="{Binding Title}" Style="{ThemeResource BodyTextBlockStyle}" TextWrapping="NoWrap"  VerticalAlignment="Center" ></TextBlock>
																	<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding SectionType}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource ForegroundLightColor}" TextWrapping="Wrap" VerticalAlignment="Center"  ></TextBlock>
																</Grid>
															</DataTemplate>
														</ListView.ItemTemplate>
													</ListView>
												</Flyout>
											</DropDownButton.Flyout>
										</DropDownButton>
									</Grid>
									<TextBlock Grid.Column="2" Text="Start: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
									<TextBlock Grid.Column="3" MinWidth="30" Text="{Binding ElementName=Codewriter, Mode=OneWay, Path=Selection.Start}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
									<TextBlock Grid.Column="4" Margin="5,0,0,0" Text="End: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
									<TextBlock Grid.Column="5" MinWidth="30" Text="{Binding ElementName=Codewriter, Mode=OneWay, Path=Selection.End}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
								</Grid>
							</Grid>

						</Grid>
						<toolkit:GridSplitter  Style="{StaticResource ColumnSplitter}" MinWidth="{Binding SplitterWidth}" Grid.Column="1"  Visibility="{Binding Default.InternalViewer}"/>
						<Grid x:Name="ViewerGrid" Grid.Column="2" Visibility="{Binding Default.InternalViewer}" Style="{StaticResource GridCell}" Padding="0" >
							<Grid.BackgroundTransition>
								<BrushTransition />
							</Grid.BackgroundTransition>
							<pdfjs:PDFjsViewer Visibility="{Binding IsInternalViewerActive}" Background="Transparent" RequestedTheme="{Binding Default.Theme, Converter={StaticResource StringToTheme}}" Page="{Binding Page, Mode=TwoWay}" SyncTeXRequested="PDFjsViewer_SyncTeXRequested" FocusVisualMargin="0" FocusVisualPrimaryBrush="Transparent" FocusVisualPrimaryThickness="0" FocusVisualSecondaryBrush="Transparent"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  x:FieldModifier="public"  x:Name="PDFReader" Loaded="PDFReader_Loaded" ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.IsZoomChainingEnabled="False" ScrollViewer.IsScrollInertiaEnabled="False" ScrollViewer.IsVerticalRailEnabled="False" ScrollViewer.HorizontalScrollMode="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  Margin="0" >
								<!--It seems that a WebView cannot be animated-->
								<!--<animations:Implicit.ShowAnimations>
								<animations:TranslationAnimation Duration="0:0:0.25" Delay="0:0:0.25" EasingMode="EaseInOut" EasingType="Quadratic" From="50, 0, 0" To="0" />
								<animations:OpacityAnimation Duration="0:0:0.25" EasingMode="EaseInOut" EasingType="Quadratic" Delay="0:0:0.25" From="0" To="1.0"/>
							</animations:Implicit.ShowAnimations>
							<animations:Implicit.HideAnimations>
								<animations:TranslationAnimation Duration="0:0:0.25" EasingMode="EaseInOut" EasingType="Quadratic" From="0, 0, 0" To="50,0,0" />
								<animations:OpacityAnimation Duration="0:0:0.25" EasingMode="EaseInOut" EasingType="Quadratic" From="1.0" To="0"/>
							</animations:Implicit.HideAnimations>-->
							</pdfjs:PDFjsViewer>

							<ScrollViewer Visibility="{Binding IsMarkdownViewerActive}" HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled" VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto">
								<animations:Implicit.ShowAnimations>
									<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
								</animations:Implicit.ShowAnimations>
								<animations:Implicit.HideAnimations>
									<animations:OpacityAnimation Duration="0:0:0.25" From="1.0" To="0"></animations:OpacityAnimation>
								</animations:Implicit.HideAnimations>
								<TextBlock Padding="12" TextWrapping="WrapWholeWords" Visibility="{Binding Default.ShowMarkdownViewer}" Text="{Binding CurrentMarkdownText}" />
								<!--ImageMaxWidth="400" ImageMaxHeight="200" WrapCodeBlock="True" UriPrefix="{Binding MarkdownViewerUriPrefix}"-->
							</ScrollViewer>
						</Grid>
					</Grid>
					<toolkit:GridSplitter Style="{StaticResource RowSplitter}" MinHeight="{Binding SplitterWidth}" Margin="8,4,12,4" Grid.Row="1" Visibility="{Binding Default.ShowLog}"/>

					<Grid Tag="LogGrid" Grid.Row="2" Visibility="{Binding Default.ShowLog}" Style="{StaticResource GridCell}">
						<Grid.BackgroundTransition>
							<BrushTransition />
						</Grid.BackgroundTransition>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<animations:Implicit.ShowAnimations>
							<animations:TranslationAnimation Duration="0:0:0.25" From="0, 50, 0" To="0" ></animations:TranslationAnimation>
							<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
						</animations:Implicit.ShowAnimations>

						<TextBlock FontWeight="Bold" Text="Log" VerticalAlignment="Center" />
						<!--<ScrollViewer x:Name="logscroll" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                        <RichTextBlock helpers:RichTextBlockHelper.Text="{Binding Blocks, Mode=TwoWay, UpdateSourceTrigger=Explicit}"  FontFamily="Segoe MDL2 Assets" IsTextSelectionEnabled="True" TextWrapping="NoWrap" x:Name="Log" Padding="0,0,0,0">
                            <RichTextBlock.ContextFlyout>
                                <TextCommandBarFlyout>

                                </TextCommandBarFlyout>
                            </RichTextBlock.ContextFlyout>
                        </RichTextBlock>
                    </ScrollViewer>-->
						<ListView x:Name="Log" x:FieldModifier="public" SelectionMode="None" ScrollViewer.HorizontalScrollMode="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" Margin="0" ItemsSource="{Binding LogLines}" Grid.Row="1" Background="Transparent" >
							<ListView.ItemContainerStyle>
								<Style TargetType="ListViewItem">
									<Setter Property="MinHeight" Value="0"></Setter>
									<Setter Property="Padding" Value="0"></Setter>
									<Setter Property="Margin" Value="0"></Setter>
								</Style>
							</ListView.ItemContainerStyle>
							<ListView.ItemContainerTransitions>
								<TransitionCollection></TransitionCollection>
							</ListView.ItemContainerTransitions>
							<ListView.ItemsPanel>
								<ItemsPanelTemplate>
									<ItemsStackPanel  ItemsUpdatingScrollMode="KeepLastItemInView" Orientation="Vertical"   Margin="0,0,12,12"></ItemsStackPanel>
								</ItemsPanelTemplate>
							</ListView.ItemsPanel>
							<ListView.ItemTemplate>
								<DataTemplate>
									<Grid ColumnSpacing="6" Margin="0" Padding="0" >
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="40" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<TextBlock Text="{Binding Line}" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.Column="0" FontFamily="Consolas" Foreground="{ThemeResource ForegroundLightColor}" ></TextBlock>
										<TextBlock Text="{Binding Date}" VerticalAlignment="Top" Grid.Column="1" FontFamily="Consolas" Foreground="{ThemeResource ForegroundLightColor}" ></TextBlock>
										<TextBlock Text="{Binding Message}" VerticalAlignment="Center" TextWrapping="Wrap" IsTextSelectionEnabled="True" Grid.Column="2" FontFamily="Consolas"></TextBlock>
									</Grid>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
						<Button Click="ClearLog_Click" HorizontalAlignment="Right">
							<Button.Content>
								<StackPanel Style="{StaticResource HorizontalStack}" >
									<SymbolIcon Symbol="Delete"></SymbolIcon>
									<TextBlock  Text="Clear" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
								</StackPanel>
							</Button.Content>
						</Button>

					</Grid>
				</Grid>
				<Grid x:Name="DocumentationGrid" Grid.Column="3" Width="450" Style="{StaticResource GridCell}" Margin="4,0,0,0" Padding="0" Visibility="{Binding ShowCommandReference, Mode=OneWay}">
					<Grid.BackgroundTransition>
						<BrushTransition />
					</Grid.BackgroundTransition>
					<animations:Implicit.ShowAnimations >
						<animations:TranslationAnimation Duration="0:0:0.25" From="50, 0, 0" To="0" ></animations:TranslationAnimation>
						<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1"></animations:OpacityAnimation>
					</animations:Implicit.ShowAnimations>
					<animations:Implicit.HideAnimations>
						<animations:TranslationAnimation Duration="0:0:0.25" From="0" To="50, 0, 0" ></animations:TranslationAnimation>
						<animations:OpacityAnimation Duration="0:0:0.25" From="1" To="0"></animations:OpacityAnimation>
					</animations:Implicit.HideAnimations>

					<SemanticZoom ViewChangeStarted="SemanticZoom_ViewChangeStarted" >
						<SemanticZoom.ZoomedInView>
							<ListView x:Name="DocumentationView" IsRightTapEnabled="True" RightTapped="DocumentationView_RightTapped" ShowsScrollingPlaceholders="False" Grid.Row="0"  Background="Transparent" SelectionMode="Single" ItemsSource="{x:Bind cvs.View}"   SelectedItem="{Binding SelectedCommand, Mode=OneWay}" IsItemClickEnabled="True" CanDragItems="True" DragOver="DocumentationView_DragOver" DragItemsStarting="DocumentationView_DragItemsStarting" AllowDrop="False"  ItemClick="DocumentationView_ItemClick"  Padding="4,4,12,4" >
								<ListView.Resources>
									<x:Double x:Key="ListViewItemMinHeight">32</x:Double>
									<x:Double x:Key="ListViewItemMinWidth">6</x:Double>
									<x:Boolean x:Key="ListViewItemSelectionIndicatorVisualEnabled" >False</x:Boolean>
									<MenuFlyout x:Name="DocumentationViewContextMenu">
										<MenuFlyout.Items>
											<MenuFlyoutItem  Text="Copy command" Tag="copycommand" Click="DocumentationViewContextMenu_Click" />
											<MenuFlyoutItem  Text="Copy with arguments" Tag="copywitharguments" Click="DocumentationViewContextMenu_Click" />
										</MenuFlyout.Items>
									</MenuFlyout>
								</ListView.Resources>

								<ListView.ItemContainerTransitions>
									<TransitionCollection></TransitionCollection>
								</ListView.ItemContainerTransitions>
								<ListView.GroupStyle>
									<GroupStyle>
										<GroupStyle.HeaderTemplate>
											<DataTemplate>
												<Grid >
													<TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" FontSize="16" Text="{Binding Key}">
													</TextBlock>
												</Grid>
											</DataTemplate>
										</GroupStyle.HeaderTemplate>
									</GroupStyle>
								</ListView.GroupStyle>
								<ListView.ItemTemplate>
									<DataTemplate x:DataType="models:Command">
										<StackPanel Padding="0,0,0,0">
											<Grid ColumnSpacing="4">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>

												<TextBlock Grid.Column="0" VerticalAlignment="Center">
										<Run Text="\"/><Run Text="{Binding Type, Converter={StaticResource CommandTypeToText}}"/><Run Text="{Binding Name}"/>
												</TextBlock>

												<ListView Grid.Column="1" IsHitTestVisible="{Binding IsSelected}" Opacity="{Binding IsSelected, Converter={StaticResource BoolToOpacity}}" VerticalAlignment="Center" Background="Transparent" ItemsSource="{Binding Arguments.ArgumentsList}" SelectionMode="Single" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" IsItemClickEnabled="False">
													<ListView.Resources>
														<x:Boolean x:Key="ListViewItemSelectionIndicatorVisualEnabled" >False</x:Boolean>
													</ListView.Resources>
													<ListView.ItemContainerTransitions>
														<TransitionCollection></TransitionCollection>
													</ListView.ItemContainerTransitions>
													<ListView.ItemsPanel>
														<ItemsPanelTemplate>
															<ItemsStackPanel Orientation="Horizontal"/>
														</ItemsPanelTemplate>
													</ListView.ItemsPanel>
													<ListView.ItemContainerStyle>
														<Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
															<Setter Property="Padding" Value="8,4,8,4"/>
															<Setter Property="Margin" Value="-6,0,0,0"/>
															<Setter Property="MinWidth" Value="32"/>
															<Setter Property="MinHeight" Value="10"/>
															<Setter Property="BorderThickness" Value="0"/>
														</Style>
													</ListView.ItemContainerStyle>
													<ListView.ItemTemplate>
														<DataTemplate >
															<StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,0,0,-2">
																<TextBlock FontSize="10" Text="{Binding Number}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,-8" ></TextBlock>
																<TextBlock  Text="{Binding Converter={StaticResource ArgumentTypeToText}}" HorizontalAlignment="Center" VerticalAlignment="Center" ></TextBlock>
																<TextBlock FontSize="10" Text="{Binding Optional, Converter={StaticResource ArgumentOptionalToText}}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-4,0,0"></TextBlock>
															</StackPanel>
														</DataTemplate>
													</ListView.ItemTemplate>
												</ListView>

												<CheckBox Grid.Column="2" Opacity="{Binding IsFavoriteOrSelected, Converter={StaticResource BoolToOpacity}}" IsChecked="{Binding IsFavorite, Mode=TwoWay}" Padding="0" Margin="0" MinWidth="22" MinHeight="32" VerticalAlignment="Center"  Click="AddDeleteFavorite_Checked" >
													<CheckBox.Template>
														<ControlTemplate TargetType="CheckBox">
															<FontIcon x:Name="Icon" FontSize="12">

																<VisualStateManager.VisualStateGroups>
																	<VisualStateGroup x:Name="CombinedStates">

																		<VisualState x:Name="UncheckedNormal">
																			<Storyboard>
																				<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Glyph">
																					<DiscreteObjectKeyFrame KeyTime="0" Value="&#xE734;" />
																				</ObjectAnimationUsingKeyFrames>
																				<DoubleAnimation Storyboard.TargetName="Icon"  Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.1" />
																			</Storyboard>
																		</VisualState>

																		<VisualState x:Name="UncheckedPointerOver">
																			<Storyboard>
																				<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Glyph">
																					<DiscreteObjectKeyFrame KeyTime="0" Value="&#xE734;" />
																				</ObjectAnimationUsingKeyFrames>
																				<DoubleAnimation Storyboard.TargetName="Icon"  Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
																			</Storyboard>
																		</VisualState>

																		<VisualState x:Name="UncheckedPressed">
																			<Storyboard>
																				<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Glyph">
																					<DiscreteObjectKeyFrame KeyTime="0" Value="&#xE735;" />
																				</ObjectAnimationUsingKeyFrames>
																				<DoubleAnimation Storyboard.TargetName="Icon"  Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.1" />
																			</Storyboard>
																		</VisualState>

																		<VisualState x:Name="UncheckedDisabled">
																			<Storyboard>
																				<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Glyph">
																					<DiscreteObjectKeyFrame KeyTime="0" Value="&#xE734;" />
																				</ObjectAnimationUsingKeyFrames>
																				<DoubleAnimation Storyboard.TargetName="Icon"  Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.1" />
																			</Storyboard>
																		</VisualState>

																		<VisualState x:Name="CheckedNormal">
																			<Storyboard>
																				<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Glyph">
																					<DiscreteObjectKeyFrame KeyTime="0" Value="&#xE735;" />
																				</ObjectAnimationUsingKeyFrames>
																				<DoubleAnimation Storyboard.TargetName="Icon"  Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.1" />
																			</Storyboard>
																		</VisualState>

																		<VisualState x:Name="CheckedPointerOver">
																			<Storyboard>
																				<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Glyph">
																					<DiscreteObjectKeyFrame KeyTime="0" Value="&#xE735;" />
																				</ObjectAnimationUsingKeyFrames>
																				<DoubleAnimation Storyboard.TargetName="Icon"  Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
																			</Storyboard>
																		</VisualState>

																		<VisualState x:Name="CheckedPressed">
																			<Storyboard>
																				<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Glyph">
																					<DiscreteObjectKeyFrame KeyTime="0" Value="&#xE735;" />
																				</ObjectAnimationUsingKeyFrames>
																				<DoubleAnimation Storyboard.TargetName="Icon"  Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.1" />
																			</Storyboard>
																		</VisualState>

																	</VisualStateGroup>

																</VisualStateManager.VisualStateGroups>

															</FontIcon>
														</ControlTemplate>
													</CheckBox.Template>
												</CheckBox>
											</Grid>
											<ListView Visibility="{Binding IsSelected,  Converter={StaticResource BoolToVisibility}}" Background="Transparent" ItemTemplateSelector="{StaticResource CommandItemTemplateSelector}" ItemsSource="{Binding Arguments.ArgumentsList}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" SelectionMode="Single" Margin="0">
												<animations:Implicit.ShowAnimations >
													<animations:TranslationAnimation Duration="0:0:0.25" From="0, 50, 0" To="0" ></animations:TranslationAnimation>
													<animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1"></animations:OpacityAnimation>
												</animations:Implicit.ShowAnimations>
												<ListView.Resources>
													<x:Boolean x:Key="ListViewItemSelectionIndicatorVisualEnabled" >False</x:Boolean>
												</ListView.Resources>
												<ListView.ItemContainerTransitions>
													<TransitionCollection></TransitionCollection>
												</ListView.ItemContainerTransitions>
												<ListView.ItemsPanel>
													<ItemsPanelTemplate>
														<ItemsStackPanel ></ItemsStackPanel>
													</ItemsPanelTemplate>
												</ListView.ItemsPanel>
												<ListView.ItemContainerStyle>
													<Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
														<Setter Property="Margin" Value="0,0,0,0" />
														<Setter Property="Padding" Value="12,4,12,4" />
														<Setter Property="BorderThickness" Value="0,0,0,0" />
														<Setter Property="MinHeight" Value="0" />
													</Style>
												</ListView.ItemContainerStyle>
												<!--<ListView.ItemContainerStyle>
													<Style TargetType="ListViewItem">
														<Setter Property="Padding" Value="4,0,4,0"/>
														<Setter Property="Margin" Value="4,0,0,4"/>
														<Setter Property="IsHitTestVisible" Value="False"/>
														<Setter Property="MinWidth" Value="10"/>
														<Setter Property="MinHeight" Value="10"/>
														<Setter Property="BorderThickness" Value="0"/>
													</Style>
												</ListView.ItemContainerStyle>-->
											</ListView>
										</StackPanel>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</SemanticZoom.ZoomedInView>
						<SemanticZoom.ZoomedOutView>
							<ListView x:Name="GroupListView" Margin="0,48,0,0" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ItemsSource="{Binding ContextCommandGroupList}" Padding="4,4,12,4">
								<ListView.ItemTemplate>
									<DataTemplate>
										<TextBlock Margin="2,0,6,0" Text="{Binding}"></TextBlock>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</SemanticZoom.ZoomedOutView>
					</SemanticZoom>

					<StackPanel VerticalAlignment="Top" HorizontalAlignment="Right" Height="32" Style="{StaticResource HorizontalStack}" Margin="0,5,16,0" Spacing="4">
						<ToggleButton ToolTipService.ToolTip="Only show favorites" IsChecked="{Binding Default.FilterFavorites, Mode=TwoWay}" Click="FilterFavorites_Checked" Padding="4" Width="32">
							<FontIcon FontSize="16" Foreground="{ThemeResource ForegroundColor}" Glyph="&#xE735;"></FontIcon>
						</ToggleButton>
						<Button ToolTipService.ToolTip="Set filters" Padding="4" Width="32">
							<Button.Content>
								<SymbolIcon Symbol="Filter"></SymbolIcon>
							</Button.Content>
							<Button.Flyout>
								<Flyout Placement="BottomEdgeAlignedRight" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
									<ListView SelectionMode="None" MinWidth="180" ItemsSource="{Binding Default.CommandGroups}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
										<ListView.ItemTemplate>
											<DataTemplate>
												<CheckBox Content="{Binding Name, Mode=OneWay}" IsChecked="{Binding IsSelected, Mode=TwoWay}" Click="Btn_CommandGroup_Click"></CheckBox>
											</DataTemplate>
										</ListView.ItemTemplate>
									</ListView>
								</Flyout>
							</Button.Flyout>
						</Button>
						<TextBox x:Name="Searchtext" PlaceholderText="Search..."  TextChanged="Searchtext_TextChanged" Width="120" Padding="4" VerticalAlignment="Stretch"></TextBox>
					</StackPanel>

				</Grid>
			</Grid>

			<ProgressBar Name="Progressbar" Grid.Row="1" VerticalAlignment="Top" Foreground="{ThemeResource ForegroundLightColor}" Background="{ThemeResource SolidBackgroundFillColorTertiary }" Visibility="{Binding IsLoadingBarVisible, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" ShowPaused="{Binding IsPaused}" Value="{Binding ProgressValue}" HorizontalAlignment="Stretch"  IsIndeterminate="{Binding IsIndeterminate}" ShowError="{Binding IsError}">
				<animations:Implicit.ShowAnimations>
					<animations:OpacityAnimation Duration="0:0:0.5" From="0" To="1"></animations:OpacityAnimation>
				</animations:Implicit.ShowAnimations>
				<animations:Implicit.HideAnimations>
					<animations:OpacityAnimation Duration="0:0:0.5" From="1" To="0"></animations:OpacityAnimation>
				</animations:Implicit.HideAnimations>
			</ProgressBar>
		</Grid>
		<ContentDialog MinWidth="500" x:Name="AboutDialog" PrimaryButtonText="Close" DefaultButton="Primary"  CornerRadius="{StaticResource LargeCornerRadius}">
			<ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
				<StackPanel  Style="{StaticResource VerticalStack}">
					<TextBlock Margin="0,6,0,0" Style="{ThemeResource SubheaderTextBlockStyle}" Text="ConTeXt IDE"></TextBlock>
					<TextBlock Style="{ThemeResource BodyTextBlockStyle}" FontSize="20" Text="About"></TextBlock>
					<TextBlock x:Name="TB_Version" Style="{ThemeResource BodyTextBlockStyle}" Text=""></TextBlock>
					<TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="by wdev (wdev@outlook.de)"></TextBlock>
					<TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="This application is not related to Pragma ADE"></TextBlock>
					<TextBlock Style="{ThemeResource BodyTextBlockStyle}" FontSize="20" Text="Dependencies and references"></TextBlock>
					<HyperlinkButton Content="LuaMetaTeX (Pragma ADE)" NavigateUri="http://www.pragma-ade.nl/"></HyperlinkButton>
					<HyperlinkButton Content="PDF.js (Mozilla)" NavigateUri="https://github.com/mozilla/pdf.js/"></HyperlinkButton>
					<ScrollViewer  HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled" VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" Padding="0,0,12,0">
						<TextBlock Visibility="Visible" TextWrapping="WrapWholeWords" x:Name="DisclaimerView" Loaded="DisclaimerView_Loaded"></TextBlock>
					</ScrollViewer>
				</StackPanel>
			</ScrollViewer>
		</ContentDialog>
		<TeachingTip x:Name="Ttp" IsOpen="false" CornerRadius="{StaticResource LargeCornerRadius}">
			<!--<TextBlock x:Name="Ttp_Tbk" TextWrapping="WrapWholeWords" Text="Text"></TextBlock>-->
		</TeachingTip>
		<!--<Grid Visibility="Visible" VerticalAlignment="Top" HorizontalAlignment="Right" Width="200" Height="28" x:Name="CustomDragRegion"  IsHitTestVisible="False"/>-->


	</Grid>
</Page>
